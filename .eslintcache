[{"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js":"1","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js":"2","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js":"3","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js":"4","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js":"5","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js":"6","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js":"7","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js":"8","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js":"9","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js":"10","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js":"11","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js":"12","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js":"13","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js":"14","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"15","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"16"},{"size":517,"mtime":1622439681440,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1622439681440,"results":"19","hashOfConfig":"18"},{"size":315,"mtime":1623044797540,"results":"20","hashOfConfig":"18"},{"size":233,"mtime":1623044797541,"results":"21","hashOfConfig":"18"},{"size":9008,"mtime":1623158920503,"results":"22","hashOfConfig":"18"},{"size":755,"mtime":1623044797542,"results":"23","hashOfConfig":"18"},{"size":325,"mtime":1623044797554,"results":"24","hashOfConfig":"18"},{"size":1726,"mtime":1623151959141,"results":"25","hashOfConfig":"18"},{"size":5486,"mtime":1623158396410,"results":"26","hashOfConfig":"18"},{"size":2425,"mtime":1623152850384,"results":"27","hashOfConfig":"18"},{"size":2409,"mtime":1623157787686,"results":"28","hashOfConfig":"18"},{"size":380,"mtime":1623058825664,"results":"29","hashOfConfig":"18"},{"size":2380,"mtime":1623157803017,"results":"30","hashOfConfig":"18"},{"size":4393,"mtime":1623158429542,"results":"31","hashOfConfig":"18"},{"size":1436,"mtime":1623073465303,"results":"32","hashOfConfig":"18"},{"size":1131,"mtime":1623044797546,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"190qrkf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js",[],["72","73"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js",["74"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js",["75"],"import React, { useEffect, useState } from 'react'\r\nimport \"./HomePage.css\"\r\nimport TasbihDotedCard from \"./TasbihDotedCard.js\";\r\nimport TasbihCard from \"./TasbihCard.js\";\r\nimport ModalShow from \"../ExtraComps/AddBody.js\"\r\nimport db from '../Firebase/firebase.js';\r\n//import { super } from '@babel/types';\r\n\r\nconst Body = props => {\r\n    const [noOfTasbih, setNoOfTasbih] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [uid, setUID] = useState(props.uid);\r\n    const isSkipped = props.skip;\r\n    const [totalTasbihsCount, setTotalTasbihCounts] = useState(props.totalTasbihCounts);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const userDeleted = props.userDeleted;\r\n\r\n    const setModalView = () => {\r\n        setShow(!show);\r\n    }\r\n\r\n\r\n    const appendNewBlock = (tasbihName, tid, totalTasbihsCount) => {\r\n        if (tasbihName) {\r\n            if (!isSkipped) {\r\n                db.collection(\"Users\").doc(uid).get().then(user => {\r\n                    user.ref\r\n                        .collection('Tasbihs')\r\n                        .add({\r\n                            Status: \"Running\",\r\n                            Name: tasbihName,\r\n                            TasbihID: tid,\r\n                            count: 0\r\n                        }).then(user => {\r\n                            console.log(\"Tasbih Added To Collection\")\r\n                        });\r\n                });\r\n\r\n                setShow(false);\r\n                setTotalTasbihCounts(totalTasbihsCount);\r\n\r\n            }\r\n            else {\r\n                db.collection(\"GuestUsers\").doc(uid).get().then(user => {\r\n                    user.ref\r\n                        .collection('Tasbihs')\r\n                        .add({\r\n                            Status: \"Running\",\r\n                            Name: tasbihName,\r\n                            TasbihID: tid,\r\n                            count: 0\r\n                        }).then(user => {\r\n                            console.log(\"Tasbih Added To Collection\")\r\n                        }).catch(er => {\r\n                            console.log(er);\r\n                        })\r\n                }).catch(er => { console.log(er) });\r\n                setShow(false);\r\n                setTotalTasbihCounts(totalTasbihsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onTasbihsChange = (totalTasbihs) => {\r\n        setTotalTasbihCounts(totalTasbihs);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNoOfTasbih([]);\r\n        setUID(props.uid);\r\n\r\n        if (isSkipped) {\r\n            if (!userDeleted) {\r\n                let unSubs = db.collection(\"GuestUsers\").doc(uid).collection('Tasbihs').onSnapshot(tasbih => {\r\n\r\n                    var noOfTasbihs = tasbih.docs.map(data => {\r\n                        let _data = data.data();\r\n                        return { ID: data.id, Name: _data.Name, Count: _data.count, Status: _data.Status, path: data.ref.path, tID: data.data().TasbihID };\r\n                    });\r\n\r\n                    setNoOfTasbih(noOfTasbihs);\r\n                    setLoading(false);\r\n\r\n                    if (userDeleted) {\r\n                        console.log('[TASBIHS] User Removed');\r\n                        unSubs();\r\n                    }\r\n                }, (err) => {\r\n                    unSubs()\r\n                });\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n        else {\r\n            let unSubs = db.collection(\"Users\").doc(uid).collection('Tasbihs').onSnapshot(tasbih => {\r\n\r\n                var noOfTasbihs = tasbih.docs.map(data => {\r\n                    let _data = data.data();\r\n                    return { ID: data.id, Name: _data.Name, Count: _data.count, Status: _data.Status, path: data.ref.path, tID: data.data().TasbihID };\r\n                });\r\n\r\n                setNoOfTasbih(noOfTasbihs);\r\n                setLoading(false);\r\n\r\n                if (userDeleted) {\r\n                    console.log('[TASBIHS] User Removed');\r\n                    unSubs();\r\n                }\r\n\r\n            }, (err) => {\r\n                unSubs();\r\n            });\r\n        }\r\n    }, [isSkipped, uid, props.uid]);\r\n\r\n    return (\r\n        <div className=\"outer-shell\">\r\n            <div className=\"home-body\">\r\n                {\r\n                    noOfTasbih.map(x => {\r\n                        return <TasbihCard userDeleted={userDeleted} key={x.ID} layout={props.layout} isSkipped={isSkipped} name={x.Name} count={x.Count} status={x.Status} path={x.path} uid={uid} />\r\n                    })\r\n                }\r\n\r\n                {\r\n                    (\r\n                        isLoading ? <div className=\"no-more-tasbihs flex\">Loading Your Tasbihs...</div> :\r\n                            (\r\n                                noOfTasbih.length >= totalTasbihsCount ?\r\n                                    <span className=\"flex no-more-tasbihs\">No More Tasbihs Available</span> :\r\n                                    <TasbihDotedCard layout={props.layout} click={setModalView} />\r\n                            )\r\n                    )\r\n                }\r\n                <ModalShow\r\n                    displayedIds={noOfTasbih.map(t => t.tID.replace(\" \", \"\"))}\r\n                    onTasbihChange={onTasbihsChange}\r\n                    showModal={show}\r\n                    click={appendNewBlock}\r\n                    hideModal={setModalView}\r\n                    userDeleted={userDeleted} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js",["76"],"import React, { useState } from 'react'\r\nimport './Header.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport SideNav from '../NavigationMenu/SideNav/SideNav.js'\r\nimport db from '../Firebase/firebase'\r\nimport {RiLayoutRowLine,RiLayoutColumnLine} from 'react-icons/ri'\r\n\r\nconst Header = props => {\r\n    const [sidebar,setsidebar] = useState(false);\r\n    const settings = props.settings;\r\n\r\n\r\n     const OpenSideNavigation = () => {\r\n         setsidebar(!sidebar);\r\n     }\r\n\r\n     const ChangeLayout = () => {\r\n        var layout = settings.Layout === 'colomn-layout' ? 'row-layout' : 'colomn-layout';\r\n        props.setLayoutStyle(layout);\r\n     }\r\n        let photoUrl = props.userProfilePic === '' ? 'favicon.jpg' : props.userProfilePic;\r\n        return (\r\n            <div className=\"header-bar\">\r\n                <div className=\"left-h sub-header\">\r\n                    <div className=\"menu-bar\">\r\n                        <span className=\"Bar-class\" onClick={OpenSideNavigation}>\r\n                            <FontAwesomeIcon icon={faBars}/>\r\n                        </span>\r\n                        <div className=\"page-name\">\r\n                            <span>\r\n                                {props.pageName}\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            props.pageName !== 'History' ? (\r\n                                <span className=\"layout\" onClick={ChangeLayout}>\r\n                                    {settings.Layout  === 'colomn-layout' ? <RiLayoutColumnLine /> : <RiLayoutRowLine />}\r\n                                </span>\r\n                            ) : ''\r\n                        }\r\n                    </div>\r\n                    <SideNav \r\n                            navClass={sidebar ? 'side-navigation nav-menu open' : 'side-navigation nav-menu' }  \r\n                            click={props.click} \r\n                            userProfilePic={photoUrl} \r\n                            userName={props.userName}\r\n                            navMan={OpenSideNavigation}\r\n                            setPageName={props.setPageName}/>\r\n\r\n                    <div className={sidebar ? 'backbone open' : 'backbone'} onClick={OpenSideNavigation}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Header;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js",["77"],"import React, { useState, useEffect } from 'react'\r\nimport './History.css'\r\nimport db from '../Firebase/firebase';\r\nimport HistoryTemplate from './HistoryBlockTemplate/Template'\r\n\r\nconst History = props => {\r\n\r\n    const [tasbihsHistory, setTasbihHistory] = useState([]);\r\n    const uid = props.uid;\r\n    const isSkipped = props.isSkipped;\r\n    const userDeleted = props.userDeleted;\r\n\r\n    const DeletePermenantData = (path) => {\r\n        db.doc(path).update({ deleterPermanently: true }).then((data) => {\r\n            console.log(data);\r\n            console.log(\"Tasbih deleted Permenantly\")\r\n        });\r\n    }\r\n\r\n    const RestoreTasbih = () => {\r\n        console.log(\"Tasbih Restore Successfully\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.pageName('History');\r\n        if (!isSkipped) {\r\n            db.collection('Users').doc(uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n        else {\r\n            db.collection('GuestUsers').doc(uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            tasbihsHistory.map(th => {\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} delete={DeletePermenantData} restore={RestoreTasbih} />\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default History\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js",["78"],"import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from '../Firebase/firebase.js';\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState('');\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  }\r\n\r\n  const handleAddData = () => {\r\n    if (name !== '') {\r\n      props.click(name, tid, noOfTasbihs.length);\r\n      setName('');\r\n    }\r\n    else {\r\n      alert('Select Tasbih First');\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function (item) {\r\n      return item.Name === e.target.value\r\n    })\r\n    setName(e.target.value);\r\n    setTID(val[0].ID);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unSubs = db.collection('Tasbihs').where('Visible', '==', true).onSnapshot(snap => {\r\n      var noOfTasbihs = snap.docs.map(doc => { return { ID: doc.id, Name: doc.data().Name } });\r\n\r\n      props.onTasbihChange(noOfTasbihs.length);\r\n\r\n      setNoOfTasbih(noOfTasbihs);\r\n\r\n      if (userDeleted) {\r\n        unSubs();\r\n      }\r\n    }, er => console.log(er));\r\n  }, [props]);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {\r\n                  noOfTasbihs.map(tasbih => {\r\n\r\n                    var disable = props.displayedIds.filter(t => {\r\n                      return t === tasbih.ID ? true : false\r\n                    });\r\n\r\n                    return <option disabled={disable[0]} key={tasbih.ID}>{tasbih.Name}</option>\r\n                  })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n          </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddBody;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js",["79"],"import React, { useEffect, useState } from 'react'\r\nimport db from '../Firebase/firebase'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { BiReset } from 'react-icons/bi'\r\n\r\nconst TasbihCard = props => {\r\n    const [counts, setCounts] = useState(props.count);\r\n    const isSkipped = props.isSkipped;\r\n    const name = props.name;\r\n    const status = props.status;\r\n    const uid = props.uid;\r\n    const path = props.path;\r\n    const userDeleted = props.userDeleted;\r\n\r\n    const RemoveTasbih = () => {\r\n        if (uid !== \"null\") {\r\n            db.doc(path).get().then(tasbihData => {\r\n                if (counts > 0) {\r\n                    if (!isSkipped) {\r\n                        db.collection('Users').doc(uid).get().then(user => {\r\n                            user.ref.collection('HistoryTasbihs').add(historyDataTemplate(tasbihData.data(), 'delete')).then(data => {\r\n                                tasbihData.ref.delete();\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        db.collection('GuestUsers').doc(uid).get().then(user => {\r\n                            user.ref.collection('HistoryTasbihs').add(historyDataTemplate(tasbihData.data(), 'delete')).then(data => {\r\n                                tasbihData.ref.delete();\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    tasbihData.ref.delete();\r\n                    console.log('Tasbih Has Been Removed');\r\n                }\r\n                console.log(\"tasbih Has been Removed\");\r\n            });\r\n        }\r\n    }\r\n\r\n    const historyDataTemplate = (data, type) => {\r\n        return {\r\n            counts: data.count,\r\n            deletedTime: new Date(),\r\n            deleterPermanently: false,\r\n            operationType: type,\r\n            tasbihId: data.TasbihID,\r\n            tasbihName: data.Name\r\n        }\r\n    }\r\n\r\n    const ResetTasbih = () => {\r\n        if (counts > 0) {\r\n            db.doc(path).get().then(tasbihData => {\r\n                if (!isSkipped) {\r\n                    db.collection('Users').doc(uid).get().then(user => {\r\n                        user.ref.collection('HistoryTasbihs').add(historyDataTemplate(tasbihData.data(), 'reset')).then(data => {\r\n                            tasbihData.ref.update({ count: 0 });\r\n                            setCounts(0);\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    db.collection('GuestUsers').doc(uid).get().then(user => {\r\n                        user.ref.collection('HistoryTasbihs').add(historyDataTemplate(tasbihData.data(), 'reset')).then(data => {\r\n                            tasbihData.ref.update({ count: 0 });\r\n                            setCounts(0);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const increseCounter = () => {\r\n        var newCount = counts + 1;\r\n        if (path !== '') {\r\n            db.doc(path).get().then(tasbihData => {\r\n                tasbihData.ref.update({ count: newCount });\r\n            });\r\n        }\r\n        setCounts(newCount);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (path !== '') {\r\n            let unSub = db.doc(path).onSnapshot(tasbihData => {\r\n                if (tasbihData.data())\r\n                    setCounts(tasbihData.data().count);\r\n\r\n                if (userDeleted)\r\n                    unSub();\r\n            }, err => { unSub() });\r\n        }\r\n    }, [path]);\r\n\r\n    return (\r\n        <div className={props.layout + \" tasbih-card-shell\"}>\r\n            <div className=\"tasbih-card-inner\">\r\n                <div className=\"header-card\">\r\n                    <div className=\"left\">{name}</div>\r\n                    <div className=\"right\">\r\n                        <span className=\"tasbih-remove\" onClick={RemoveTasbih}><RiDeleteBin5Line /></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middle-card\" onClick={increseCounter}>{counts}</div>\r\n                <div className=\"footer-card\">\r\n                    {status}\r\n                    <span className=\"tasbih-reset\" onClick={ResetTasbih}><BiReset /></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasbihCard;","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":194,"column":8,"nodeType":"86","endLine":194,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":116,"column":8,"nodeType":"86","endLine":116,"endColumn":35,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":10},{"ruleId":"84","severity":1,"message":"94","line":56,"column":8,"nodeType":"86","endLine":56,"endColumn":10,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"88","line":49,"column":6,"nodeType":"86","endLine":49,"endColumn":13,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"88","line":97,"column":8,"nodeType":"86","endLine":97,"endColumn":14,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'userDeleted'. Either include it or remove the dependency array.",["101"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'isSkipped', 'props', 'uid', and 'userDeleted'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["102"],["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [setCurrentUser]",{"range":"115","text":"116"},"Update the dependencies array to be: [isSkipped, uid, props.uid, userDeleted]",{"range":"117","text":"118"},"Update the dependencies array to be: [isSkipped, props, uid, userDeleted]",{"range":"119","text":"120"},"Update the dependencies array to be: [props, userDeleted]",{"range":"121","text":"122"},"Update the dependencies array to be: [path, userDeleted]",{"range":"123","text":"124"},[8372,8374],"[setCurrentUser]",[4106,4133],"[isSkipped, uid, props.uid, userDeleted]",[2084,2086],"[isSkipped, props, uid, userDeleted]",[1321,1328],"[props, userDeleted]",[3593,3599],"[path, userDeleted]"]