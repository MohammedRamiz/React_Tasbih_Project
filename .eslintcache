[{"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js":"1","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js":"2","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js":"3","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js":"4","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js":"5","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js":"6","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js":"7","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js":"8","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js":"9","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js":"10","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js":"11","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js":"12","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js":"13","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js":"14","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js":"15","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js":"16","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js":"17","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js":"18","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js":"19","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js":"20","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"21","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"22","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js":"23","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js":"24","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js":"25","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js":"26","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js":"27","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js":"28","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js":"29"},{"size":712,"mtime":1623325884176,"results":"30","hashOfConfig":"31"},{"size":320,"mtime":1623304155214,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1622439681440,"results":"33","hashOfConfig":"31"},{"size":268,"mtime":1623325339509,"results":"34","hashOfConfig":"31"},{"size":233,"mtime":1623044797541,"results":"35","hashOfConfig":"31"},{"size":3569,"mtime":1633613968190,"results":"36","hashOfConfig":"31"},{"size":266,"mtime":1623649608328,"results":"37","hashOfConfig":"31"},{"size":1565,"mtime":1633523754389,"results":"38","hashOfConfig":"31"},{"size":736,"mtime":1628572751983,"results":"39","hashOfConfig":"31"},{"size":474,"mtime":1633613801375,"results":"40","hashOfConfig":"31"},{"size":215,"mtime":1623318494907,"results":"41","hashOfConfig":"31"},{"size":1084,"mtime":1633421274507,"results":"42","hashOfConfig":"31"},{"size":1128,"mtime":1633614215716,"results":"43","hashOfConfig":"31"},{"size":3142,"mtime":1633613941889,"results":"44","hashOfConfig":"31"},{"size":2811,"mtime":1633524838581,"results":"45","hashOfConfig":"31"},{"size":3852,"mtime":1632990577407,"results":"46","hashOfConfig":"31"},{"size":3169,"mtime":1633613862463,"results":"47","hashOfConfig":"31"},{"size":3909,"mtime":1633441233269,"results":"48","hashOfConfig":"31"},{"size":492,"mtime":1634194434761,"results":"49","hashOfConfig":"31"},{"size":3651,"mtime":1632380847218,"results":"50","hashOfConfig":"31"},{"size":3177,"mtime":1634193093775,"results":"51","hashOfConfig":"31"},{"size":1106,"mtime":1623675432977,"results":"52","hashOfConfig":"31"},{"size":726,"mtime":1632296608496,"results":"53","hashOfConfig":"31"},{"size":3729,"mtime":1632487022611,"results":"54","hashOfConfig":"31"},{"size":4430,"mtime":1632381145880,"results":"55","hashOfConfig":"31"},{"size":335,"mtime":1632896943791,"results":"56","hashOfConfig":"31"},{"size":239,"mtime":1632912488688,"results":"57","hashOfConfig":"31"},{"size":1205,"mtime":1632991367727,"results":"58","hashOfConfig":"31"},{"size":2168,"mtime":1634199517234,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"190qrkf",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js",[],["127","128"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js",["129","130","131","132"],"import React, { useState, useEffect } from \"react\";\r\nimport { provider, auth } from \"../Firebase/firebase\";\r\nimport HomePage from \"../Home/HomePage.js\";\r\nimport SignInPage from \"../SignIn/SignIn\";\r\nimport LoadingScreen from \"./LoadingScreen\"\r\nimport LandingPage from \"../Home/LandingPage/LandingPage.js\"\r\n\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setUpUserData,\r\n  updateSettings,\r\n  recoredUnSubCall,\r\n  execCalls,\r\n  resetSettings\r\n} from \"../../action/action\";\r\n\r\nconst Load = () => {\r\n  const dispatch = useDispatch();\r\n  const currUser = useSelector(state => state.User);\r\n  const settings = useSelector(state => state.Settings);\r\n\r\n  const [userState, setUserState] = useState(\"\");\r\n\r\n  const LogOutUser = () => {\r\n    setUserState(\"LOS\");\r\n    dispatch(execCalls(\"RELEASE\"));\r\n    dispatch(resetSettings());\r\n\r\n    if (currUser.isAnonymous) {\r\n      auth\r\n        .signOut()\r\n        .then(() => {\r\n          resetUser();\r\n          console.log(\"user Removed\");\r\n        })\r\n        .catch(er => console.log(er));\r\n    } else {\r\n      auth.signOut().then(() => {\r\n        resetUser();\r\n        console.log(\"user Logout Successfully\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetUser = () => {\r\n    dispatch(setUpUserData(null));\r\n    dispatch(updateSettings({ loading: false }));\r\n    setUserState(\"LOR\");\r\n  };\r\n\r\n  const setCurrentUser = async user => {\r\n    if (user) {\r\n      var userType = user.isAnonymous ? \"GuestUsers\" : \"Users\";\r\n      dispatch(updateSettings({ loading: true, userType: userType }));\r\n      console.log(userType);\r\n      var unSub = db.collection(userType).doc(user.uid).onSnapshot(async (data) => {\r\n        if (data.data()) {\r\n          var optionExist = data.data().Deleted ? data.data().Deleted : false;\r\n          if (!optionExist) {\r\n            let unSubSet = data.ref.collection(\"Settings\").onSnapshot(\r\n              snap => {\r\n                if (!snap.empty) {\r\n                  dispatch(\r\n                    updateSettings({\r\n                      isUserIn: true,\r\n                      settings: snap.docs[0].data(),\r\n                      path: snap.docs[0].ref.path\r\n                    })\r\n                  );\r\n                } else {\r\n                  data.ref.collection(\"Settings\").add(settings.settings);\r\n                }\r\n              },\r\n              err => {\r\n                console.log(err);\r\n              }\r\n            );\r\n\r\n            dispatch(setUpUserData(user));\r\n            dispatch(recoredUnSubCall(unSubSet, \"LOAD\"));\r\n            dispatch(updateSettings({ loading: false }));\r\n\r\n          } else {\r\n            dispatch(updateSettings({ loading: false }));\r\n          }\r\n        } else {\r\n          dispatch(updateSettings({ loading: false }));\r\n        }\r\n      }, err => console.log(err));\r\n      dispatch(recoredUnSubCall(unSub, \"LOAD\"));\r\n    }\r\n    else {\r\n      console.log(\"user not found\");\r\n      if (userState === \"LOR\" || userState === \"\") {\r\n        dispatch(\r\n          updateSettings({\r\n            loading: false\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const setUser = () => {\r\n    setUserState(\"LOR\");\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const unsub = await auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user);\r\n    });\r\n    return unsub;\r\n  }, []);\r\n\r\n  let loadPage = currUser && !settings.loading ? <HomePage click={LogOutUser} /> : <SignInPage click={setUser} />; //<LandingPage />;\r\n\r\n  return settings.loading ? <LoadingScreen /> : loadPage;\r\n};\r\n\r\nexport default Load;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js",["133","134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport TasbihDotedCard from \"./TasbihDotedCard.js\";\r\nimport TasbihCard from \"./TasbihCard.js\";\r\nimport ModalShow from \"../ExtraComps/AddBody.js\";\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { recoredUnSubCall, execCalls } from \"../../action/action\";\r\n\r\nconst Body = props => {\r\n  const [noOfTasbih, setNoOfTasbih] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const userType = useSelector(state => state.Settings.userType);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const currentUser = useSelector(state => state.User);\r\n  const totalTasbihsCount = useSelector(s => s.Settings.totalTasbihsCount);\r\n  const currentTasbihData = useSelector(s => s.Settings.settings.CurrentTasbihData);\r\n  const dispatch = useDispatch();\r\n\r\n  const appendNewBlock = async (tasbihName, tid) => {\r\n    if (tasbihName) {\r\n      setShow(false);\r\n      var user = await db.collection(userType).doc(currentUser.uid).get();\r\n      await user.ref.collection(\"Tasbihs\").add({\r\n        Name: tasbihName,\r\n        TasbihID: tid,\r\n        count: 0,\r\n        running: false\r\n      });\r\n      console.log(\"Tasbih Added To Collection\");\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setNoOfTasbih([]);\r\n    dispatch(execCalls(\"RELEASE_BODY\"));\r\n    let unSubs = db.collection(userType).doc(currentUser.uid).collection(\"Tasbihs\")\r\n      .orderBy(\"running\", \"desc\")\r\n      .onSnapshot(tasbih => {\r\n        var noOfTasbihs = tasbih.docs.map(data => {\r\n          const _data = data.data();\r\n          return {\r\n            ID: data.id,\r\n            Name: _data.Name,\r\n            Count: _data.count,\r\n            path: data.ref.path,\r\n            tID: _data.TasbihID,\r\n            running: _data.running\r\n          };\r\n        });\r\n\r\n        setNoOfTasbih(noOfTasbihs);\r\n        setLoading(false);\r\n      }, err => {\r\n        unSubs();\r\n      });\r\n\r\n    dispatch(recoredUnSubCall(unSubs, 'BODY'));\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <div className=\"outer-shell\">\r\n      <div className=\"home-body\">\r\n        {noOfTasbih.map(x => {\r\n          return (\r\n            <TasbihCard\r\n              key={x.ID}\r\n              name={x.Name}\r\n              count={x.Count}\r\n              path={x.path}\r\n              running={x.running}\r\n              tasbihDocID={x.ID}\r\n              tID={x.tID}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {isLoading ? (\r\n          <div className=\"no-more-tasbihs flex\">Loading Your Tasbihs...</div>\r\n        ) : noOfTasbih.length >= totalTasbihsCount ? (\r\n          <span className=\"flex no-more-tasbihs\">\r\n            No More Tasbihs Available. You can request for tasbih.\r\n          </span>\r\n        ) : (\r\n              <TasbihDotedCard click={() => { setShow(!show) }} />\r\n            )}\r\n        <ModalShow\r\n          displayedIds={noOfTasbih.map(t => t.tID.replace(\" \", \"\"))}\r\n          showModal={show}\r\n          click={appendNewBlock}\r\n          hideModal={() => { setShow(!show) }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js",["136","137"],"import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SideNav from \"../NavigationMenu/SideNav/SideNav.js\";\r\nimport db from \"../Firebase/firebase\";\r\nimport { RiLayoutRowLine, RiLayoutColumnLine } from \"react-icons/ri\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = props => {\r\n  const [sidebar, setsidebar] = useState(false);\r\n  const settings = useSelector(state => state.Settings);\r\n\r\n  const OpenSideNavigation = () => {\r\n    setsidebar(!sidebar);\r\n  };\r\n\r\n  const ChangeLayout = () => {\r\n    const layout =\r\n      settings.settings.Layout === \"colomn-layout\"\r\n        ? \"row-layout\"\r\n        : \"colomn-layout\";\r\n\r\n    db.doc(settings.path).update({ Layout: layout });\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-bar\">\r\n      <div className=\"left-h sub-header\">\r\n        <div className=\"menu-bar\">\r\n          <MobileView>\r\n            <span className=\"Bar-class\" onClick={OpenSideNavigation}>\r\n              <FontAwesomeIcon icon={faBars} />\r\n            </span>\r\n          </MobileView>\r\n          <div className=\"page-name\">\r\n            <span>{props.pageName}</span>\r\n          </div>\r\n          {props.pageName == \"My Tasbihs\" ? (\r\n            <span className=\"layout\" onClick={ChangeLayout}>\r\n              {settings.settings.Layout === \"colomn-layout\" ? (\r\n                <RiLayoutColumnLine />\r\n              ) : (\r\n                  <RiLayoutRowLine />\r\n                )}\r\n            </span>\r\n          ) : (\r\n              props.pageName == \"Request\" ? (\"\") : (\r\n                <span className=\"history-total-count layout\">\r\n                  {props.totalCount}\r\n                </span>\r\n              )\r\n            )}\r\n        </div>\r\n        <MobileView>\r\n          <SideNav\r\n            navClass={\r\n              sidebar ? (\r\n                \"side-navigation nav-menu open\"\r\n              ) : (\r\n                  \"side-navigation nav-menu\"\r\n                )\r\n            }\r\n            click={props.click}\r\n            navMan={OpenSideNavigation}\r\n            setPageName={props.setPageName}\r\n            activePage={props.activePage}\r\n          />\r\n        </MobileView>\r\n        <BrowserView>\r\n          <SideNav\r\n            navClass=\"side-navigation nav-menu\"\r\n            navMan={OpenSideNavigation}\r\n            click={props.click}\r\n            setPageName={props.setPageName}\r\n            activePage={props.activePage}\r\n          />\r\n        </BrowserView>\r\n\r\n        <div\r\n          className={sidebar ? \"backbone open\" : \"backbone\"}\r\n          onClick={OpenSideNavigation}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js",["138"],"import React, { useEffect } from \"react\";//useState,\r\nimport db from \"../Firebase/firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\nimport { auth } from \"../Firebase/firebase\";\r\n\r\nimport LoadingScreen from \"../LoadPage/LoadingScreen\"\r\n//import { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SignIn = props => {\r\n  const dispatch = useDispatch();\r\n  const settings = useSelector(s => s.Settings);\r\n  const currUser = useSelector(s => s.User);\r\n\r\n  //const [username, setUsername] = useState(\"\");\r\n  //const [isUserNameLoginVisible, setUserNameLogin] = useState(false);\r\n\r\n  //Guest User Sign In\r\n  const GuestSignIn = async () => {\r\n    dispatch(updateSettings({ loading: true }));\r\n    console.log(\"Guest sign in started\");\r\n\r\n    await auth.signInAnonymously().then(async (loginUser) => {\r\n      dispatch(setUpUserData(loginUser.user));\r\n\r\n      var noOfGuests = await db.collection(\"NoOfGuests\").get();\r\n      var newCount = noOfGuests.docs[0].data().count + 1;\r\n      var name = \"Guest\" + newCount;\r\n      await loginUser.user.updateProfile({\r\n        displayName: name,\r\n        uid: new Date().getTime()\r\n      });\r\n\r\n      await db.collection(\"GuestUsers\").doc(loginUser.user.uid).set({ Name: name, uid: loginUser.user.uid, Deleted: false });\r\n      await noOfGuests.docs[0].ref.update({ count: newCount });\r\n\r\n      var gUser = await db.collection(\"GuestUsers\").doc(loginUser.user.uid).get();\r\n      var tasbihs = await db.collection(\"Tasbihs\").where(\"Visible\", \"==\", true).get()\r\n      var allTasbihs = tasbihs.docs.map(doc => doc);\r\n      var randPick = Math.floor(Math.random() * allTasbihs.length);\r\n\r\n      await gUser.ref.collection(\"Tasbihs\").add({\r\n        count: 0,\r\n        TasbihID: allTasbihs[randPick].id,\r\n        Name: allTasbihs[randPick].data().Name,\r\n        Status: \"Running\"\r\n      });\r\n      var set = await gUser.ref.collection(\"Settings\").add(settings.settings)\r\n      console.log(\"Guest sign in ended\");\r\n      dispatch(\r\n        updateSettings({\r\n          isUserIn: true,\r\n          path: set.path,\r\n          // loading: false,\r\n          totalTasbihsCount: allTasbihs.length\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  //Google Sign In\r\n  // const LoginUser = async () => {\r\n  //   auth.signInWithPopup(provider).then(async (res) => {\r\n  //     //\r\n  //     var retUser = await db.collection(\"Users\").doc(res.user.uid).get();\r\n  //     if (!retUser.exists) {\r\n  //       await db.collection(\"Users\").doc(retUser.id).set({ Name: res.user.displayName, uid: retUser.id })\r\n  //       var updatedUserData = await db.collection(\"Users\").doc(retUser.uid).get()\r\n  //       var tasbihData = await db.collection(\"Tasbihs\").where(\"Visible\", \"==\", true).get()\r\n\r\n  //       var allTasbihs = tasbihData.docs.map(doc => doc);\r\n  //       var randPick = Math.floor(\r\n  //         Math.random() * allTasbihs.length\r\n  //       );\r\n\r\n  //       await updatedUserData.ref.collection(\"Tasbihs\").add({\r\n  //         count: 0,\r\n  //         TasbihID: allTasbihs[randPick].id,\r\n  //         Name: allTasbihs[randPick].data().Name,\r\n  //         Status: \"Running\"\r\n  //       });\r\n  //       await updatedUserData.ref.collection(\"Settings\").add(settings.settings);\r\n\r\n  //       dispatch(setUpUserData(res.user));\r\n\r\n  //       dispatch(\r\n  //         updateSettings({\r\n  //           isUserIn: true,\r\n  //           loading: false,\r\n  //           totalTasbihsCount: allTasbihs.length\r\n  //         })\r\n  //       );\r\n  //     } else {\r\n  //       console.log(\"User found\");\r\n  //       dispatch(updateSettings({ loading: false }));\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log(\"sign in useEffect Called\")\r\n    GuestSignIn();\r\n  }, [currUser]);\r\n\r\n  return (\r\n    <LoadingScreen />\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js",["139","140"],"import React, { useState, useEffect } from 'react'\r\nimport './History.css'\r\nimport db from '../Firebase/firebase';\r\nimport HistoryTemplate from './HistoryBlockTemplate/Template'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { recoredUnSubCall, execCalls } from '../../action/action'\r\n\r\nconst History = props => {\r\n    const [tasbihsHistory, setTasbihHistory] = useState([]);\r\n    const [totalCounts, setTotalCounts] = useState(0);\r\n\r\n    const currUser = useSelector(state => state.User);\r\n    const dispatch = useDispatch();\r\n\r\n    const DeletePermenantData = (path) => {\r\n        db.doc(path).update({ deleterPermanently: true }).then((data) => {\r\n            console.log(data);\r\n            console.log(\"Tasbih deleted Permenantly\")\r\n        });\r\n    }\r\n\r\n    const RestoreTasbih = () => {\r\n        console.log(\"Tasbih Restored Successfully\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.pageName('History', \"history\");\r\n        dispatch(execCalls(\"RELEASE_HISTORY\"));\r\n        if (!currUser.isAnonymous) {\r\n            db.collection('Users').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n                    let counts = 0;\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        counts += doc.data().counts;\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTotalCounts(counts)\r\n                    props.countsHandler(counts);\r\n                    setTasbihHistory(historyTasbihs);\r\n                }, er => console.log(er));\r\n\r\n                dispatch(recoredUnSubCall(unSubs, \"HISTORY\"));\r\n\r\n            });\r\n        }\r\n        else {\r\n            db.collection('GuestUsers').doc(currUser.uid).get().then(userData => {\r\n                var unSubs = userData.ref.collection(\"HistoryTasbihs\").orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n                    let counts = 0;\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        counts += doc.data().counts;\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTotalCounts(counts)\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                }, er => console.log(er));\r\n\r\n                dispatch(recoredUnSubCall(unSubs, \"HISTORY\"));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n\r\n    var renderComp = tasbihsHistory.length > 0 ? (\r\n        tasbihsHistory.map(th => {\r\n            if (th.deleterPermanently)\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} />\r\n            else\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} delete={DeletePermenantData} restore={RestoreTasbih} />\r\n        })\r\n    ) : (\r\n            < span className=\"flex no-more-tasbihs\" >No history found</span>\r\n        );\r\n\r\n    return ( <> { renderComp } </> )\r\n}\r\n\r\nexport default History\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js",["141"],"import React, { useEffect, useState } from \"react\";\r\nimport db from \"../Firebase/firebase\";\r\nimport { RiDeleteBin5Line, RiPlayFill, RiPauseFill } from \"react-icons/ri\";\r\nimport { BiReset } from \"react-icons/bi\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst TasbihCard = props => {\r\n  const [counts, setCounts] = useState(props.count);\r\n  const name = props.name;\r\n  const path = props.path;\r\n  const isTasbihRunnig = props.running;\r\n\r\n\r\n  const uid = useSelector(state => state.User.uid);\r\n  const layout = useSelector(state => state.Settings.settings.Layout);\r\n  const settingsPath = useSelector(state => state.Settings.path);\r\n  const userType = useSelector(state => state.Settings.userType);\r\n\r\n  const RemoveTasbih = async () => {\r\n    try {\r\n      if (uid !== \"null\") {\r\n        var tasbihData = await db.doc(path).get();\r\n\r\n        if (counts > 0) {\r\n          var userDocPath = path.split(\"/\")[0];\r\n          var userData = await db.collection(userDocPath).doc(uid).get();\r\n          await userData.ref.collection(\"HistoryTasbihs\").add(historyDataTemplate(tasbihData.data(), \"delete\"));\r\n        }\r\n\r\n        await tasbihData.ref.delete();\r\n      }\r\n\r\n      console.log(\"Tasbih Has Been Removed\");\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const historyDataTemplate = (data, type) => {\r\n    return {\r\n      counts: data.count,\r\n      deletedTime: new Date(),\r\n      deleterPermanently: false,\r\n      operationType: type,\r\n      tasbihId: data.TasbihID,\r\n      tasbihName: data.Name\r\n    };\r\n  };\r\n\r\n  const ResetTasbih = async () => {\r\n    if (counts > 0) {\r\n      var userDocName = path.split(\"/\")[0];\r\n      var tasbihData = await db.doc(path).get();\r\n      var user = await db.collection(userDocName).doc(uid).get();\r\n      if (user) {\r\n        await user.ref.collection(\"HistoryTasbihs\").add(historyDataTemplate(tasbihData.data(), \"reset\"));\r\n        tasbihData.ref.update({ count: 0 });\r\n        setCounts(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const increseCounter = () => {\r\n    if (isTasbihRunnig) {\r\n      var newCount = counts + 1;\r\n      if (path !== \"\") {\r\n        db.doc(path).get().then(tasbihData => {\r\n          tasbihData.ref.update({ count: newCount });\r\n        });\r\n      }\r\n      setCounts(newCount);\r\n    }\r\n  };\r\n\r\n  const runPauseTabih = async () => {\r\n    var tasbihData = await db.collection(userType).doc(uid).collection(\"Tasbihs\").get()\r\n    tasbihData.docs.forEach((data) => { data.ref.update({ running: false }) })\r\n\r\n    tasbihData = await db.collection(userType).doc(uid).collection(\"Tasbihs\").doc(props.tasbihDocID).get()\r\n    tasbihData.ref.update({ running: !isTasbihRunnig });\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      if (path !== \"\") {\r\n        let unSub = db.doc(path).onSnapshot(\r\n          tasbihData => {\r\n            if (tasbihData.data()) setCounts(tasbihData.data().count);\r\n          }, err => {\r\n            unSub();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    [path]\r\n  );\r\n\r\n  return (\r\n    <div className={layout + \" tasbih-card-shell\"}>\r\n      <div className=\"tasbih-card-inner\">\r\n        <div className=\"header-card\">\r\n          <div className=\"tasbih-name\">{name}</div>\r\n        </div>\r\n        <div className=\"middle-card flex\">\r\n          <div className=\"side-panel-r\">\r\n            <span className=\"tasbih-start-pause\" onClick={runPauseTabih}>\r\n              {!isTasbihRunnig ? <RiPlayFill /> : <RiPauseFill />}\r\n            </span>\r\n          </div>\r\n          <div className=\"tasbih-counts flex\" onClick={increseCounter}>{counts}</div>\r\n          <div className=\"side-panel-l\">\r\n            <span className=\"tasbih-remove\" onClick={RemoveTasbih}>\r\n              <RiDeleteBin5Line />\r\n            </span>\r\n            <span className=\"tasbih-reset\" onClick={ResetTasbih}>\r\n              <BiReset />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasbihCard;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js",["142","143","144"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from \"../Firebase/firebase.js\";\r\nimport \"./modal.css\";\r\n\r\nimport { updateSettings } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState(\"Choose Tasbih\");\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const settings = useSelector(s => s.Settings);\r\n  const dispach = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  };\r\n\r\n  const handleAddData = () => {\r\n    if (name !== \"\") {\r\n      props.click(name, tid);\r\n      setName(\"Choose Tasbih\");\r\n    } else {\r\n      alert(\"Select Tasbih First\");\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (obj, e) => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function (item) {\r\n      return item.Name === e.target.text;\r\n    });\r\n    setName(e.target.text);\r\n    console.log(val);\r\n    setTID(val[0].ID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unSubs = db\r\n      .collection(\"Tasbihs\")\r\n      .where(\"Visible\", \"==\", true)\r\n      .onSnapshot(\r\n      snap => {\r\n        var noOfTasbihs = snap.docs.map(doc => {\r\n          return { ID: doc.id, Name: doc.data().Name };\r\n        });\r\n\r\n        dispach(\r\n          updateSettings({\r\n            totalTasbihsCount: noOfTasbihs.length\r\n          })\r\n        );\r\n        setNoOfTasbih(noOfTasbihs);\r\n\r\n        if (userDeleted) {\r\n          unSubs();\r\n        }\r\n      },\r\n      er => console.log(er)\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              {/* <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {noOfTasbihs.map(tasbih => {\r\n                  var disable = props.displayedIds.filter(t => {\r\n                    return t === tasbih.ID ? true : false;\r\n                  });\r\n\r\n                  return (\r\n                    <option disabled={disable[0]} key={tasbih.ID}>\r\n                      {tasbih.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select> */}\r\n\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {name}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {noOfTasbihs.map(tasbih => {\r\n                    var disable = props.displayedIds.filter(t => {\r\n                      return t === tasbih.ID ? true : false;\r\n                    });\r\n\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={handleOnChange}\r\n                        disabled={disable[0]}\r\n                        key={tasbih.ID}\r\n                      >\r\n                        {tasbih.Name}\r\n                      </Dropdown.Item>\r\n                    );\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",["145"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js",["146","147","148"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { auth } from \"../Firebase/firebase\";\r\n\r\nimport \"./guestSignIn.css\";\r\n\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GuestSignInModel = props => {\r\n    const [username, setUsername] = useState(\"Choose Tasbih\");\r\n\r\n    const settings = useSelector(s => s.Settings);\r\n    const currUser = useSelector(s => s.User);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        props.hideModal();\r\n    };\r\n\r\n    const signInGuestUser = () => {\r\n        dispatch(updateSettings({ loading: true }));\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .where(\"Name\", \"==\", username)\r\n            .where(\"Deleted\", \"==\", false)\r\n            .get()\r\n            .then(data => {\r\n                if (!data.empty) {\r\n                    console.log(\"account found\")\r\n                    auth.signInAnonymously().then(loginUser => {\r\n                        const ref = data.docs[0].ref;\r\n                        db\r\n                            .collection(\"GuestUsers\")\r\n                            .doc(loginUser.user.uid)\r\n                            .set({\r\n                                Name: data.docs[0].data().Name,\r\n                                uid: loginUser.user.uid,\r\n                                Deleted: false\r\n                            })\r\n                            .then(userData => {\r\n                                ref.update({ Deleted: true });\r\n                                asyncFunc(ref, loginUser.user);\r\n                            });\r\n                    });\r\n                } else {\r\n                    console.log(\"User Does Not Exists\");\r\n                    dispatch(updateSettings({ loading: false }));\r\n                }\r\n            })\r\n            .catch(er => {\r\n                dispatch(updateSettings({ loading: false }));\r\n                console.log(er);\r\n            });\r\n    };\r\n\r\n    const asyncFunc = async (res, curretUser) => {\r\n        const tasbihs = await res.collection(\"Tasbihs\").get();\r\n        const set = await res.collection(\"Settings\").get();\r\n        const historyTasbihs = await res.collection(\"HistoryTasbihs\").get();\r\n\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .doc(curretUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n                res.delete();\r\n                doc.ref\r\n                    .collection(\"Settings\")\r\n                    .get()\r\n                    .then(doc => {\r\n                        doc.docs[0].ref.delete();\r\n                    });\r\n                extractData(doc.ref, tasbihs, \"Tasbihs\");\r\n                extractData(doc.ref, set, \"Settings\");\r\n                extractData(doc.ref, historyTasbihs, \"HistoryTasbihs\");\r\n\r\n                dispatch(setUpUserData(curretUser));\r\n            });\r\n    };\r\n\r\n    const extractData = (ref, data, type) => {\r\n        data.docs.forEach(data => {\r\n            ref.collection(type).add(data.data());\r\n        });\r\n    };\r\n\r\n    const setusername = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return (\r\n        <Modal show={props.showModal} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Find Account</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"sign-in-with-username\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                onChange={setusername}\r\n                                type=\"text\"\r\n                                placeholder=\"Your Username\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" className=\"save-btn\" onClick={signInGuestUser}>\r\n                    sign in\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default GuestSignInModel;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":18},{"ruleId":"154","severity":1,"message":"158","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":109,"column":13,"nodeType":"161","endLine":114,"endColumn":4},{"ruleId":"159","severity":1,"message":"162","line":114,"column":6,"nodeType":"163","endLine":114,"endColumn":8,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"165","line":18,"column":9,"nodeType":"156","messageId":"157","endLine":18,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":35,"column":13,"nodeType":"161","endLine":60,"endColumn":4},{"ruleId":"159","severity":1,"message":"166","line":60,"column":6,"nodeType":"163","endLine":60,"endColumn":19,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":41,"column":27,"nodeType":"170","messageId":"171","endLine":41,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":50,"column":30,"nodeType":"170","messageId":"171","endLine":50,"endColumn":32},{"ruleId":"159","severity":1,"message":"172","line":103,"column":6,"nodeType":"163","endLine":103,"endColumn":16,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"174","line":11,"column":12,"nodeType":"156","messageId":"157","endLine":11,"endColumn":23},{"ruleId":"159","severity":1,"message":"175","line":65,"column":8,"nodeType":"163","endLine":65,"endColumn":10,"suggestions":"176"},{"ruleId":"154","severity":1,"message":"177","line":16,"column":9,"nodeType":"156","messageId":"157","endLine":16,"endColumn":21},{"ruleId":"154","severity":1,"message":"178","line":2,"column":35,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"154","severity":1,"message":"179","line":16,"column":9,"nodeType":"156","messageId":"157","endLine":16,"endColumn":17},{"ruleId":"159","severity":1,"message":"180","line":66,"column":6,"nodeType":"163","endLine":66,"endColumn":8,"suggestions":"181"},{"ruleId":"154","severity":1,"message":"182","line":17,"column":10,"nodeType":"156","messageId":"157","endLine":17,"endColumn":24},{"ruleId":"154","severity":1,"message":"183","line":2,"column":25,"nodeType":"156","messageId":"157","endLine":2,"endColumn":33},{"ruleId":"154","severity":1,"message":"179","line":15,"column":11,"nodeType":"156","messageId":"157","endLine":15,"endColumn":19},{"ruleId":"154","severity":1,"message":"184","line":16,"column":11,"nodeType":"156","messageId":"157","endLine":16,"endColumn":19},{"ruleId":"159","severity":1,"message":"185","line":43,"column":21,"nodeType":"186","endLine":43,"endColumn":46},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'provider' is defined but never used.","Identifier","unusedVar","'LandingPage' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["189"],"'currentTasbihData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userType'. Either include them or remove the dependency array.",["190"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'GuestSignIn'. Either include it or remove the dependency array.",["191"],"'totalCounts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currUser.isAnonymous', 'currUser.uid', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["192"],"'settingsPath' is assigned a value but never used.","'Form' is defined but never used.","'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispach' and 'userDeleted'. Either include them or remove the dependency array.",["193"],"'profileDetails' is assigned a value but never used.","'Dropdown' is defined but never used.","'currUser' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [setCurrentUser]",{"range":"204","text":"205"},"Update the dependencies array to be: [currentUser, dispatch, userType]",{"range":"206","text":"207"},"Update the dependencies array to be: [GuestSignIn, currUser]",{"range":"208","text":"209"},"Update the dependencies array to be: [currUser.isAnonymous, currUser.uid, dispatch, props]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispach, userDeleted]",{"range":"212","text":"213"},[3337,3339],"[setCurrentUser]",[2040,2053],"[currentUser, dispatch, userType]",[3765,3775],"[GuestSignIn, currUser]",[2556,2558],"[currUser.isAnonymous, currUser.uid, dispatch, props]",[1707,1709],"[dispach, userDeleted]"]