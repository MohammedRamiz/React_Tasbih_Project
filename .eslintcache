[{"E:\\React App\\tbh-app\\src\\index.js":"1","E:\\React App\\tbh-app\\src\\App.js":"2","E:\\React App\\tbh-app\\src\\reportWebVitals.js":"3","E:\\React App\\tbh-app\\src\\Componets\\CountingPage\\TasbihPage.js":"4","E:\\React App\\tbh-app\\src\\Componets\\LoadPage\\Load.js":"5","E:\\React App\\tbh-app\\src\\Componets\\Firebase\\firebase.js":"6","E:\\React App\\tbh-app\\src\\Componets\\Home\\HomePage.js":"7","E:\\React App\\tbh-app\\src\\Componets\\SignIn\\SignIn.js":"8","E:\\React App\\tbh-app\\src\\Componets\\Header\\Header.js":"9","E:\\React App\\tbh-app\\src\\Componets\\Home\\Body.js":"10","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihDotedCard.js":"11","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihCard.js":"12","E:\\React App\\tbh-app\\src\\Componets\\ExtraComps\\AddBody.js":"13","E:\\React App\\tbh-app\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":317,"mtime":1622866394183,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":332,"mtime":1622863850207,"results":"19","hashOfConfig":"16"},{"size":6335,"mtime":1622874707304,"results":"20","hashOfConfig":"16"},{"size":658,"mtime":1622863850208,"results":"21","hashOfConfig":"16"},{"size":774,"mtime":1622868421537,"results":"22","hashOfConfig":"16"},{"size":394,"mtime":1622863850212,"results":"23","hashOfConfig":"16"},{"size":1664,"mtime":1622863850209,"results":"24","hashOfConfig":"16"},{"size":5246,"mtime":1622869513816,"results":"25","hashOfConfig":"16"},{"size":435,"mtime":1622863850211,"results":"26","hashOfConfig":"16"},{"size":2423,"mtime":1622863850211,"results":"27","hashOfConfig":"16"},{"size":2758,"mtime":1622863850208,"results":"28","hashOfConfig":"16"},{"size":796,"mtime":1622863850212,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cmtii9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\React App\\tbh-app\\src\\index.js",[],"E:\\React App\\tbh-app\\src\\App.js",[],"E:\\React App\\tbh-app\\src\\reportWebVitals.js",[],"E:\\React App\\tbh-app\\src\\Componets\\CountingPage\\TasbihPage.js",[],["60","61"],"E:\\React App\\tbh-app\\src\\Componets\\LoadPage\\Load.js",["62"],"import React,{Component} from 'react'\r\nimport {provider,auth} from '../Firebase/firebase'\r\nimport {Route} from 'react-router-dom'\r\nimport HomePage from '../Home/HomePage.js'\r\nimport SignInPage from '../SignIn/SignIn'\r\n\r\nimport db from '../Firebase/firebase.js';\r\n\r\nexport default class Load extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            user: null,\r\n            isAnonymous: false,\r\n            loading:true,\r\n            uid: 'null',\r\n            userName: \"UnKnown\",\r\n            totalTasbihCounts: 0,\r\n            deleted:false\r\n        }\r\n    }\r\n\r\n    SkipSignIn = () => {\r\n        this.setState({loading:true,isAnonymous:true});\r\n        auth.signInAnonymously().then(user => {\r\n            this.setState({user:user.user,uid:user.user.uid});\r\n            //console.log(user);\r\n            db.collection(\"NoOfGuests\").get().then(nog => {\r\n                var newCount = nog.docs[0].data().count + 1;\r\n                var name = \"Guest\" + newCount;\r\n                user.user.updateProfile({displayName: name});\r\n\r\n                db.collection(\"GuestUsers\").doc(user.user.uid).set({Name: name ,uid: user.user.uid,Deleted:false});\r\n\r\n                nog.docs[0].ref.update({count: newCount});\r\n                this.setState({userName: name});\r\n\r\n                db.collection(\"GuestUsers\").doc(this.state.uid).get().then(user=>{\r\n                    db.collection(\"Tasbihs\").get().then(tasbihs => {\r\n                         var allTasbihs = tasbihs.docs.map(doc => doc.data().Visible ? doc : null).filter(tasbih => tasbih ? tasbih : null );\r\n\r\n                        console.log(allTasbihs);\r\n                        var randPick = Math.floor(Math.random() * allTasbihs.length);\r\n\r\n                        user.ref.collection(\"Tasbihs\").add({count:0,TasbihID:allTasbihs[randPick].id,Name:allTasbihs[randPick].data().Name,Status:'Running'});\r\n                        this.setState({loading:false,totalTasbihCounts:allTasbihs.length});\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    ReqForSignIn = () => {\r\n        this.setState({isAnonymous:false,user:null,uid:\"null\"});\r\n    }\r\n\r\n    LoginUser = () =>  {\r\n        auth.signInWithPopup(provider).then(res => {\r\n            this.setState({user :res.user,uid:res.user.uid,userName:res.user.displayName});\r\n            db.collection(\"Users\").doc(res.user.uid).get().then(user => {\r\n              if(!user.exists){\r\n                  db.collection(\"Users\").doc(user.id).set({Name: res.user.displayName,uid: user.id}).then(user => {\r\n                      db.collection(\"Users\").doc(this.state.uid).get().then(user=>{\r\n                          db.collection(\"Tasbihs\").get().then(tasbihs => {\r\n\r\n                            var allTasbihs = tasbihs.docs.map(doc => doc.data().Visible ? doc : null).filter(tasbih => tasbih ? tasbih : null );\r\n                            var randPick = Math.floor(Math.random() * allTasbihs.length);\r\n\r\n                            console.log(allTasbihs);\r\n\r\n                            user.ref.collection(\"Tasbihs\").add({count:0,TasbihID:allTasbihs[randPick].id,Name:allTasbihs[randPick].data().Name,Status:'Running'});\r\n                            this.setState({loading:false});\r\n                          });\r\n                      });\r\n                  });\r\n              }else{\r\n                  console.log(\"User found\");\r\n                  this.setState({loading:false});\r\n              }\r\n            })\r\n        });\r\n    }\r\n\r\n    LogOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            this.state.user.delete().then(() =>  {\r\n                db.collection(\"GuestUsers\").doc(this.state.uid).update({Deleted:true}).then(() =>{\r\n                    this.setState({\r\n                        user: null,\r\n                        uid:'null',\r\n                        loading: false,\r\n                        isAnonymous: false\r\n                    })\r\n                    console.log('user Removed');\r\n                });\r\n              });\r\n        },error => {console.log(error)});\r\n    }\r\n\r\n    componentWillMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                if(user.isAnonymous){\r\n                    let unsubscibe = db.collection(\"GuestUsers\").doc(user.uid).onSnapshot(data => {\r\n                       if(data.data()){\r\n                        if(!data.data().Deleted){\r\n                            user.updateProfile({displayName: data.data().Name});   \r\n                            this.setState({user:user,uid:user.uid,isAnonymous:user.isAnonymous,userName:data.data().Name});\r\n                            this.setState({loading:false});\r\n                        }\r\n                        else{\r\n                            this.setState({deleted: true});\r\n                        }\r\n                       }\r\n                   });\r\n\r\n                   if(this.state.deleted){\r\n                       console.log(\"Unasubscribed\");\r\n                       unsubscibe();\r\n                   }\r\n                }\r\n                else{\r\n                    db.collection(\"Users\").doc(user.uid).onSnapshot(data => {\r\n                        if(data.data()){\r\n                            this.setState({user:user,uid:user.uid,isAnonymous:user.isAnonymous,userName:data.data().Name});\r\n                            this.setState({loading:false});\r\n                        }\r\n                   });\r\n                }\r\n            }else{\r\n              this.setState({loading:false});\r\n            }\r\n        })\r\n    }\r\n   \r\n\r\n    render() {        \r\n        let Authentic = this.state.user || this.state.isAnonymous ? \r\n        <HomePage   click={this.LogOutUser}\r\n                    signIn={this.ReqForSignIn}\r\n                    skip={this.state.isAnonymous}\r\n                    uid = {this.state.uid}\r\n                    userProfilePic={!this.state.isAnonymous ? this.state.user.photoURL :''} \r\n                    userName={this.state.userName}\r\n                    totalTasbihCounts={this.state.totalTasbihCounts}\r\n                    isLoading={this.state.loading}/> :\r\n        <SignInPage click={this.LoginUser} \r\n                    skip={this.SkipSignIn} />\r\n\r\n        return ( this.state.loading ? <div className=\"initialize flex\">Loading...</div> : Authentic)\r\n    }\r\n}\r\n\r\n\r\n","E:\\React App\\tbh-app\\src\\Componets\\Firebase\\firebase.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\HomePage.js",[],"E:\\React App\\tbh-app\\src\\Componets\\SignIn\\SignIn.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Header\\Header.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\Body.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihDotedCard.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihCard.js",[],"E:\\React App\\tbh-app\\src\\Componets\\ExtraComps\\AddBody.js",[],"E:\\React App\\tbh-app\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":9,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]