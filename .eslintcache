[{"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js":"1","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js":"2","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js":"3","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js":"4","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js":"5","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js":"6","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js":"7","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js":"8","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js":"9","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js":"10","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js":"11","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js":"12","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js":"13","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js":"14","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"15","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"16","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js":"17","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js":"18","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js":"19","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js":"20","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js":"21"},{"size":712,"mtime":1623325884176,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1622439681440,"results":"24","hashOfConfig":"23"},{"size":320,"mtime":1623304155214,"results":"25","hashOfConfig":"23"},{"size":233,"mtime":1623044797541,"results":"26","hashOfConfig":"23"},{"size":9464,"mtime":1623414942495,"results":"27","hashOfConfig":"23"},{"size":755,"mtime":1623044797542,"results":"28","hashOfConfig":"23"},{"size":4709,"mtime":1623404684214,"results":"29","hashOfConfig":"23"},{"size":1163,"mtime":1623408777640,"results":"30","hashOfConfig":"23"},{"size":5340,"mtime":1623394528327,"results":"31","hashOfConfig":"23"},{"size":2126,"mtime":1623413769854,"results":"32","hashOfConfig":"23"},{"size":2469,"mtime":1623305851305,"results":"33","hashOfConfig":"23"},{"size":484,"mtime":1623313287927,"results":"34","hashOfConfig":"23"},{"size":2817,"mtime":1623331230169,"results":"35","hashOfConfig":"23"},{"size":4745,"mtime":1623394542029,"results":"36","hashOfConfig":"23"},{"size":1461,"mtime":1623399268592,"results":"37","hashOfConfig":"23"},{"size":993,"mtime":1623246510734,"results":"38","hashOfConfig":"23"},{"size":268,"mtime":1623325339509,"results":"39","hashOfConfig":"23"},{"size":205,"mtime":1623306842122,"results":"40","hashOfConfig":"23"},{"size":215,"mtime":1623318494907,"results":"41","hashOfConfig":"23"},{"size":207,"mtime":1623331507114,"results":"42","hashOfConfig":"23"},{"size":1104,"mtime":1623404634521,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"190qrkf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js",[],["91","92"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js",["93"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js",["94","95"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport TasbihDotedCard from \"./TasbihDotedCard.js\";\r\nimport TasbihCard from \"./TasbihCard.js\";\r\nimport ModalShow from \"../ExtraComps/AddBody.js\";\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { useSelector } from \"react-redux\";\r\n//import { super } from '@babel/types';\r\n\r\nconst Body = props => {\r\n  const [noOfTasbih, setNoOfTasbih] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUID] = useState(props.uid);\r\n  const isSkipped = useSelector(state => state.User.isAnonymous);\r\n\r\n  const [isLoading, setLoading] = useState(true);\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const currentUser = useSelector(state => state.User);\r\n  const totalTasbihsCount = useSelector(s => s.Settings.totalTasbihsCount);\r\n\r\n  const setModalView = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const appendNewBlock = (tasbihName, tid, totalTasbihsCount) => {\r\n    if (tasbihName) {\r\n      if (!isSkipped) {\r\n        db\r\n          .collection(\"Users\")\r\n          .doc(currentUser.uid)\r\n          .get()\r\n          .then(user => {\r\n            user.ref\r\n              .collection(\"Tasbihs\")\r\n              .add({\r\n                Status: \"Running\",\r\n                Name: tasbihName,\r\n                TasbihID: tid,\r\n                count: 0\r\n              })\r\n              .then(user => {\r\n                console.log(\"Tasbih Added To Collection\");\r\n              });\r\n          });\r\n\r\n        setShow(false);\r\n        //setTotalTasbihCounts(totalTasbihsCount);\r\n      } else {\r\n        db\r\n          .collection(\"GuestUsers\")\r\n          .doc(currentUser.uid)\r\n          .get()\r\n          .then(user => {\r\n            user.ref\r\n              .collection(\"Tasbihs\")\r\n              .add({\r\n                Status: \"Running\",\r\n                Name: tasbihName,\r\n                TasbihID: tid,\r\n                count: 0\r\n              })\r\n              .then(user => {\r\n                console.log(\"Tasbih Added To Collection\");\r\n              })\r\n              .catch(er => {\r\n                console.log(er);\r\n              });\r\n          })\r\n          .catch(er => {\r\n            console.log(er);\r\n          });\r\n        setShow(false);\r\n        //setTotalTasbihCounts(totalTasbihsCount);\r\n      }\r\n    }\r\n  };\r\n\r\n  //   const onTasbihsChange = totalTasbihs => {\r\n  //     setTotalTasbihCounts(totalTasbihs);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    setNoOfTasbih([]);\r\n    setUID(props.uid);\r\n\r\n    if (isSkipped) {\r\n      if (!userDeleted) {\r\n        let unSubs = db\r\n          .collection(\"GuestUsers\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"Tasbihs\")\r\n          .onSnapshot(\r\n            tasbih => {\r\n              var noOfTasbihs = tasbih.docs.map(data => {\r\n                let _data = data.data();\r\n                return {\r\n                  ID: data.id,\r\n                  Name: _data.Name,\r\n                  Count: _data.count,\r\n                  Status: _data.Status,\r\n                  path: data.ref.path,\r\n                  tID: data.data().TasbihID\r\n                };\r\n              });\r\n\r\n              setNoOfTasbih(noOfTasbihs);\r\n              setLoading(false);\r\n\r\n              if (userDeleted) {\r\n                console.log(\"[TASBIHS] User Removed\");\r\n                unSubs();\r\n              }\r\n            },\r\n            err => {\r\n              unSubs();\r\n            }\r\n          );\r\n      } else {\r\n      }\r\n    } else {\r\n      let unSubs = db\r\n        .collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Tasbihs\")\r\n        .onSnapshot(\r\n          tasbih => {\r\n            var noOfTasbihs = tasbih.docs.map(data => {\r\n              let _data = data.data();\r\n              return {\r\n                ID: data.id,\r\n                Name: _data.Name,\r\n                Count: _data.count,\r\n                Status: _data.Status,\r\n                path: data.ref.path,\r\n                tID: data.data().TasbihID\r\n              };\r\n            });\r\n\r\n            setNoOfTasbih(noOfTasbihs);\r\n            setLoading(false);\r\n\r\n            if (userDeleted) {\r\n              console.log(\"[TASBIHS] User Removed\");\r\n              unSubs();\r\n            }\r\n          },\r\n          err => {\r\n            unSubs();\r\n          }\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"outer-shell\">\r\n      <div className=\"home-body\">\r\n        {noOfTasbih.map(x => {\r\n          return (\r\n            <TasbihCard\r\n              userDeleted={userDeleted}\r\n              key={x.ID}\r\n              name={x.Name}\r\n              count={x.Count}\r\n              status={x.Status}\r\n              path={x.path}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {isLoading ? (\r\n          <div className=\"no-more-tasbihs flex\">Loading Your Tasbihs...</div>\r\n        ) : noOfTasbih.length >= totalTasbihsCount ? (\r\n          <span className=\"flex no-more-tasbihs\">\r\n            No More Tasbihs Available\r\n          </span>\r\n        ) : (\r\n          <TasbihDotedCard click={setModalView} />\r\n        )}\r\n        <ModalShow\r\n          displayedIds={noOfTasbih.map(t => t.tID.replace(\" \", \"\"))}\r\n          showModal={show}\r\n          click={appendNewBlock}\r\n          hideModal={setModalView}\r\n          userDeleted={userDeleted}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js",["96"],"import React, { useState, useEffect } from 'react'\r\nimport './History.css'\r\nimport db from '../Firebase/firebase';\r\nimport HistoryTemplate from './HistoryBlockTemplate/Template'\r\n\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst History = props => {\r\n    const [tasbihsHistory, setTasbihHistory] = useState([]);\r\n    const userDeleted = props.userDeleted;\r\n\r\n    const currUser = useSelector(state => state.User);\r\n\r\n    const DeletePermenantData = (path) => {\r\n        db.doc(path).update({ deleterPermanently: true }).then((data) => {\r\n            console.log(data);\r\n            console.log(\"Tasbih deleted Permenantly\")\r\n        });\r\n    }\r\n\r\n    const RestoreTasbih = () => {\r\n        console.log(\"Tasbih Restore Successfully\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.pageName('History');\r\n        if (!currUser.isAnonymous) {\r\n            db.collection('Users').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n        else {\r\n            db.collection('GuestUsers').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            tasbihsHistory.map(th => {\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} delete={DeletePermenantData} restore={RestoreTasbih} />\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default History\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js",["97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport db from \"../Firebase/firebase.js\";\r\n\r\nimport { updateSettings } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const settings = useSelector(s => s.Settings);\r\n  const dispach = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  };\r\n\r\n  const handleAddData = () => {\r\n    if (name !== \"\") {\r\n      props.click(name, tid, noOfTasbihs.length);\r\n      setName(\"\");\r\n    } else {\r\n      alert(\"Select Tasbih First\");\r\n    }\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function(item) {\r\n      return item.Name === e.target.value;\r\n    });\r\n    setName(e.target.value);\r\n    setTID(val[0].ID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unSubs = db\r\n      .collection(\"Tasbihs\")\r\n      .where(\"Visible\", \"==\", true)\r\n      .onSnapshot(\r\n        snap => {\r\n          var noOfTasbihs = snap.docs.map(doc => {\r\n            return { ID: doc.id, Name: doc.data().Name };\r\n          });\r\n\r\n          dispach(\r\n            updateSettings({\r\n              totalTasbihsCount: noOfTasbihs.length\r\n            })\r\n          );\r\n          setNoOfTasbih(noOfTasbihs);\r\n\r\n          if (userDeleted) {\r\n            unSubs();\r\n          }\r\n        },\r\n        er => console.log(er)\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {noOfTasbihs.map(tasbih => {\r\n                  var disable = props.displayedIds.filter(t => {\r\n                    return t === tasbih.ID ? true : false;\r\n                  });\r\n\r\n                  return (\r\n                    <option disabled={disable[0]} key={tasbih.ID}>\r\n                      {tasbih.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js",["99"],"import React, { useEffect, useState } from \"react\";\r\nimport db from \"../Firebase/firebase\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { BiReset } from \"react-icons/bi\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst TasbihCard = props => {\r\n  const [counts, setCounts] = useState(props.count);\r\n  const name = props.name;\r\n  const status = props.status;\r\n  const path = props.path;\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const isAnonymous = useSelector(state => state.User.isAnonymous);\r\n  const uid = useSelector(state => state.User.uid);\r\n  const layout = useSelector(state => state.Settings.settings.Layout);\r\n\r\n  const RemoveTasbih = () => {\r\n    if (uid !== \"null\") {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          if (counts > 0) {\r\n            if (!isAnonymous) {\r\n              db\r\n                .collection(\"Users\")\r\n                .doc(uid)\r\n                .get()\r\n                .then(user => {\r\n                  user.ref\r\n                    .collection(\"HistoryTasbihs\")\r\n                    .add(historyDataTemplate(tasbihData.data(), \"delete\"))\r\n                    .then(data => {\r\n                      tasbihData.ref.delete();\r\n                    });\r\n                });\r\n            } else {\r\n              db\r\n                .collection(\"GuestUsers\")\r\n                .doc(uid)\r\n                .get()\r\n                .then(user => {\r\n                  user.ref\r\n                    .collection(\"HistoryTasbihs\")\r\n                    .add(historyDataTemplate(tasbihData.data(), \"delete\"))\r\n                    .then(data => {\r\n                      tasbihData.ref.delete();\r\n                    });\r\n                });\r\n            }\r\n          } else {\r\n            tasbihData.ref.delete();\r\n            console.log(\"Tasbih Has Been Removed\");\r\n          }\r\n          console.log(\"tasbih Has been Removed\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const historyDataTemplate = (data, type) => {\r\n    console.log(data);\r\n    return {\r\n      counts: data.count,\r\n      deletedTime: new Date(),\r\n      deleterPermanently: false,\r\n      operationType: type,\r\n      tasbihId: data.TasbihID,\r\n      tasbihName: data.Name\r\n    };\r\n  };\r\n\r\n  const ResetTasbih = () => {\r\n    console.log(uid);\r\n    if (counts > 0) {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          if (!isAnonymous) {\r\n            db\r\n              .collection(\"Users\")\r\n              .doc(uid)\r\n              .get()\r\n              .then(user => {\r\n                user.ref\r\n                  .collection(\"HistoryTasbihs\")\r\n                  .add(historyDataTemplate(tasbihData.data(), \"reset\"))\r\n                  .then(data => {\r\n                    tasbihData.ref.update({ count: 0 });\r\n                    setCounts(0);\r\n                  });\r\n              });\r\n          } else {\r\n            db\r\n              .collection(\"GuestUsers\")\r\n              .doc(uid)\r\n              .get()\r\n              .then(user => {\r\n                user.ref\r\n                  .collection(\"HistoryTasbihs\")\r\n                  .add(historyDataTemplate(tasbihData.data(), \"reset\"))\r\n                  .then(data => {\r\n                    tasbihData.ref.update({ count: 0 });\r\n                    setCounts(0);\r\n                  });\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const increseCounter = () => {\r\n    var newCount = counts + 1;\r\n    if (path !== \"\") {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          tasbihData.ref.update({ count: newCount });\r\n        });\r\n    }\r\n    setCounts(newCount);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (path !== \"\") {\r\n        let unSub = db.doc(path).onSnapshot(\r\n          tasbihData => {\r\n            if (tasbihData.data()) setCounts(tasbihData.data().count);\r\n\r\n            if (userDeleted) unSub();\r\n          },\r\n          err => {\r\n            unSub();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    [path]\r\n  );\r\n\r\n  return (\r\n    <div className={layout + \" tasbih-card-shell\"}>\r\n      <div className=\"tasbih-card-inner\">\r\n        <div className=\"header-card\">\r\n          <div className=\"left\">{name}</div>\r\n          <div className=\"right\">\r\n            <span className=\"tasbih-remove\" onClick={RemoveTasbih}>\r\n              <RiDeleteBin5Line />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"middle-card\" onClick={increseCounter}>\r\n          {counts}\r\n        </div>\r\n        <div className=\"footer-card\">\r\n          {status}\r\n          <span className=\"tasbih-reset\" onClick={ResetTasbih}>\r\n            <BiReset />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasbihCard;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":293,"column":6,"nodeType":"106","endLine":293,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":13},{"ruleId":"104","severity":1,"message":"112","line":153,"column":6,"nodeType":"106","endLine":153,"endColumn":8,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":57,"column":8,"nodeType":"106","endLine":57,"endColumn":10,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":16,"column":9,"nodeType":"110","messageId":"111","endLine":16,"endColumn":17},{"ruleId":"104","severity":1,"message":"117","line":65,"column":6,"nodeType":"106","endLine":65,"endColumn":8,"suggestions":"118"},{"ruleId":"104","severity":1,"message":"119","line":141,"column":5,"nodeType":"106","endLine":141,"endColumn":11,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currentUser.uid', 'isSkipped', 'props.uid', and 'userDeleted'. Either include them or remove the dependency array. If 'setUID' needs the current value of 'props.uid', you can also switch to useReducer instead of useState and read 'props.uid' in the reducer.",["124"],"React Hook useEffect has missing dependencies: 'currUser.isAnonymous', 'currUser.uid', 'props', and 'userDeleted'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["125"],"'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispach' and 'userDeleted'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'userDeleted'. Either include it or remove the dependency array.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [setCurrentUser]",{"range":"138","text":"139"},"Update the dependencies array to be: [currentUser.uid, isSkipped, props.uid, userDeleted]",{"range":"140","text":"141"},"Update the dependencies array to be: [currUser.isAnonymous, currUser.uid, props, userDeleted]",{"range":"142","text":"143"},"Update the dependencies array to be: [dispach, userDeleted]",{"range":"144","text":"145"},"Update the dependencies array to be: [path, userDeleted]",{"range":"146","text":"147"},[9072,9074],"[setCurrentUser]",[4295,4297],"[currentUser.uid, isSkipped, props.uid, userDeleted]",[2144,2146],"[currUser.isAnonymous, currUser.uid, props, userDeleted]",[1703,1705],"[dispach, userDeleted]",[3991,3997],"[path, userDeleted]"]