[{"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js":"1","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js":"2","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js":"3","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js":"4","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js":"5","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js":"6","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js":"7","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js":"8","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js":"9","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js":"10","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js":"11","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js":"12","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js":"13","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js":"14","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js":"15","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js":"16","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js":"17","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js":"18","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js":"19","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js":"20","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js":"21","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js":"22","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js":"23","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js":"24","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"25","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"26","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js":"27","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js":"28","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js":"29"},{"size":712,"mtime":1623325884176,"results":"30","hashOfConfig":"31"},{"size":320,"mtime":1623304155214,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1622439681440,"results":"33","hashOfConfig":"31"},{"size":268,"mtime":1623325339509,"results":"34","hashOfConfig":"31"},{"size":233,"mtime":1623044797541,"results":"35","hashOfConfig":"31"},{"size":377,"mtime":1635313969415,"results":"36","hashOfConfig":"31"},{"size":5329,"mtime":1635421589596,"results":"37","hashOfConfig":"31"},{"size":1369,"mtime":1635406870524,"results":"38","hashOfConfig":"31"},{"size":239,"mtime":1632912488688,"results":"39","hashOfConfig":"31"},{"size":1573,"mtime":1635321269102,"results":"40","hashOfConfig":"31"},{"size":1084,"mtime":1633421274507,"results":"41","hashOfConfig":"31"},{"size":1098,"mtime":1635319308019,"results":"42","hashOfConfig":"31"},{"size":947,"mtime":1635319396964,"results":"43","hashOfConfig":"31"},{"size":726,"mtime":1632296608496,"results":"44","hashOfConfig":"31"},{"size":805,"mtime":1635319741063,"results":"45","hashOfConfig":"31"},{"size":5687,"mtime":1635423334135,"results":"46","hashOfConfig":"31"},{"size":3348,"mtime":1635335941103,"results":"47","hashOfConfig":"31"},{"size":3046,"mtime":1635423345564,"results":"48","hashOfConfig":"31"},{"size":366,"mtime":1634555118388,"results":"49","hashOfConfig":"31"},{"size":1205,"mtime":1632991367727,"results":"50","hashOfConfig":"31"},{"size":3513,"mtime":1635319241764,"results":"51","hashOfConfig":"31"},{"size":490,"mtime":1634555118381,"results":"52","hashOfConfig":"31"},{"size":5208,"mtime":1635323047123,"results":"53","hashOfConfig":"31"},{"size":4052,"mtime":1635319296033,"results":"54","hashOfConfig":"31"},{"size":3185,"mtime":1635321289006,"results":"55","hashOfConfig":"31"},{"size":1106,"mtime":1635310856118,"results":"56","hashOfConfig":"31"},{"size":4010,"mtime":1635423336114,"results":"57","hashOfConfig":"31"},{"size":2166,"mtime":1634555118391,"results":"58","hashOfConfig":"31"},{"size":4430,"mtime":1632381145880,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"5z3sk3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js",[],["127","128"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js",["129","130","131","132","133","134","135","136","137","138"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js",["139"],"import React, { useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport Body from \"./Body.js\";\r\nimport History from \"../History/History\";\r\nimport Header from \"../Header/Header.js\";\r\nimport RequestTasbihs from \"../RequestTasbihs/RequestTasbihs.js\"\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst HomePage = props => {\r\n  const [pageName, setPageName] = useState(\"My Tasbihs\");\r\n  const [activePage, setActivePage] = useState(\"homepage\");\r\n  const [historyCounts, setHistoryCounts] = useState(0);\r\n\r\n  const changePageName = (pageName, activePage) => {\r\n    setActivePage(activePage);\r\n    setPageName(pageName);\r\n  };\r\n\r\n  const totalHistoryCount = (counts) => {\r\n    setHistoryCounts(counts);\r\n  }\r\n\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <Header\r\n        click={props.click}\r\n        signIn={props.signIn}\r\n        pageName={pageName}\r\n        setPageName={changePageName}\r\n        activePage={activePage}\r\n        totalCount={historyCounts}\r\n\r\n      />\r\n      <div className=\"inner-container\">\r\n        <Route path=\"/\" exact>\r\n          <Body />\r\n        </Route>\r\n        <Route path=\"/history\">\r\n          <History\r\n            userDeleted={props.userDeleted}\r\n            uid={props.uid}\r\n            isSkipped={props.skip}\r\n            pageName={changePageName}\r\n            countsHandler={totalHistoryCount}\r\n          />\r\n        </Route>\r\n        {/* <Route path=\"/request-tasbih\">\r\n          <RequestTasbihs\r\n            pageName={changePageName} />\r\n        </Route> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js",["140","141"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js",["142","143"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport TasbihDotedCard from \"./TasbihDotedCard.js\";\r\nimport TasbihCard from \"./TasbihCard.js\";\r\nimport ModalShow from \"../ExtraComps/AddBody.js\";\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { recoredUnSubCall, execCalls, saveTasbihCache } from \"../../action/action\";\r\n\r\nconst Body = props => {\r\n  const [noOfTasbih, setNoOfTasbih] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const userType = useSelector(state => state.Settings.userType);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const currentUser = useSelector(state => state.User);\r\n  const totalTasbihsCount = useSelector(s => s.Settings.totalTasbihsCount);\r\n  const tasbihCached = useSelector(state => state.TasbihCache)\r\n  const dispatch = useDispatch();\r\n\r\n  const appendNewBlock = async (tasbihName, tid) => {\r\n    if (tasbihName) {\r\n      setShow(false);\r\n      var user = await db.collection(userType).doc(currentUser.uid).get();\r\n      await user.ref.collection(\"Tasbihs\").add({\r\n        Name: tasbihName,\r\n        TasbihID: tid,\r\n        count: 0,\r\n        running: false\r\n      });\r\n      console.log(\"Tasbih Added To Collection\");\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setNoOfTasbih([]);\r\n\r\n    if (tasbihCached) {\r\n      setNoOfTasbih(tasbihCached);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    dispatch(execCalls(\"RELEASE_BODY\"));\r\n    let unSubs = db.collection(userType).doc(currentUser.uid).collection(\"Tasbihs\")\r\n      .orderBy(\"running\", \"desc\")\r\n      .onSnapshot(tasbih => {\r\n        console.log(tasbih.docs);\r\n        var noOfTasbihs = tasbih.docs.map(data => {\r\n          const _data = data.data();\r\n          return {\r\n            ID: data.id,\r\n            Name: _data.Name,\r\n            Count: _data.count,\r\n            path: data.ref.path,\r\n            tID: _data.TasbihID,\r\n            running: _data.running\r\n          };\r\n        });\r\n        setNoOfTasbih(noOfTasbihs);\r\n        setLoading(false);\r\n        dispatch(saveTasbihCache(noOfTasbihs, \"TCACHE\"));\r\n      }, err => {\r\n        unSubs();\r\n      });\r\n\r\n    dispatch(recoredUnSubCall(unSubs, 'BODY'));\r\n  }, [currentUser, tasbihCached]);\r\n\r\n  return (\r\n    <div className=\"outer-shell\">\r\n      <div className=\"home-body\">\r\n        {noOfTasbih.map(x => {\r\n          return (\r\n            <TasbihCard\r\n              key={x.ID}\r\n              name={x.Name}\r\n              count={x.Count}\r\n              path={x.path}\r\n              running={x.running}\r\n              tasbihDocID={x.ID}\r\n              tID={x.tID}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {isLoading ? (\r\n          <div className=\"no-more-tasbihs flex\">Loading Your Tasbihs...</div>\r\n        ) : noOfTasbih.length >= totalTasbihsCount ? (\r\n          <span className=\"flex no-more-tasbihs\">\r\n            No More Tasbihs Available. You can request for tasbih.\r\n          </span>\r\n        ) : (\r\n          <TasbihDotedCard click={() => { setShow(!show) }} />\r\n        )}\r\n        <ModalShow\r\n          displayedIds={noOfTasbih.map(t => t.tID.replace(\" \", \"\"))}\r\n          showModal={show}\r\n          click={appendNewBlock}\r\n          hideModal={() => { setShow(!show) }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js",["144","145","146"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js",["147","148"],"import React, { useState, useEffect } from 'react'\r\nimport './History.css'\r\nimport db from '../Firebase/firebase';\r\nimport HistoryTemplate from './HistoryBlockTemplate/Template'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { recoredUnSubCall, execCalls, saveHistoryCache } from '../../action/action'\r\n\r\nconst History = props => {\r\n    const [tasbihsHistory, setTasbihHistory] = useState([]);\r\n    const [totalCounts, setTotalCounts] = useState(0);\r\n\r\n    const currUser = useSelector(state => state.User);\r\n    const cachedHistory = useSelector(state => state.HistoryCache)\r\n    const dispatch = useDispatch();\r\n\r\n    const DeletePermenantData = async (path) => {\r\n        await db.doc(path).update({ deleterPermanently: true });\r\n        console.log(\"Tasbih deleted Permenantly\")\r\n    }\r\n\r\n    const RestoreTasbih = () => {\r\n        console.log(\"Tasbih Restored Successfully\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.pageName('History', \"history\");\r\n\r\n        if (cachedHistory) {\r\n            setTasbihHistory(cachedHistory);\r\n            return;\r\n        }\r\n\r\n        dispatch(execCalls(\"RELEASE_HISTORY\"));\r\n        if (!currUser.isAnonymous) {\r\n            db.collection('Users').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n                    let counts = 0;\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        counts += doc.data().counts;\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n                    setTotalCounts(counts)\r\n                    props.countsHandler(counts);\r\n                    setTasbihHistory(historyTasbihs);\r\n                    dispatch(saveHistoryCache(historyTasbihs, \"HCACHE\"));\r\n                }, er => console.log(er));\r\n\r\n                dispatch(recoredUnSubCall(unSubs, \"HISTORY\"));\r\n\r\n            });\r\n        }\r\n        else {\r\n            db.collection('GuestUsers').doc(currUser.uid).get().then(userData => {\r\n                var unSubs = userData.ref.collection(\"HistoryTasbihs\").orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n                    let counts = 0;\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        counts += doc.data().counts;\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTotalCounts(counts)\r\n                    props.countsHandler(counts);\r\n                    setTasbihHistory(historyTasbihs);\r\n                    dispatch(saveHistoryCache(historyTasbihs, \"HCACHE\"));\r\n\r\n                }, er => console.log(er));\r\n\r\n                dispatch(recoredUnSubCall(unSubs, \"HISTORY\"));\r\n            });\r\n        }\r\n    }, [cachedHistory]);\r\n\r\n\r\n    var renderComp = tasbihsHistory.length > 0 ? (\r\n        tasbihsHistory.map(th => {\r\n            if (th.deleterPermanently)\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} />\r\n            else\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} delete={DeletePermenantData} restore={RestoreTasbih} />\r\n        })\r\n    ) : (\r\n        < span className=\"flex no-more-tasbihs\" >No history found</span>\r\n    );\r\n\r\n    return (<> {renderComp} </>)\r\n}\r\n\r\nexport default History\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js",["149","150","151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport db from \"../Firebase/firebase\";\r\nimport { RiDeleteBin5Line, RiPlayFill, RiPauseFill, RiTimer2Line, RiHashtag } from \"react-icons/ri\";\r\nimport { BiReset, BiHash } from \"react-icons/bi\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst TasbihCard = props => {\r\n  const [counts, setCounts] = useState(props.count);\r\n  const [displayContSection, setCountSection] = useState(false);\r\n  const [displayComponent, setDisplayComp] = useState('hide');\r\n  const name = props.name;\r\n  const path = props.path;\r\n  const isTasbihRunnig = props.running;\r\n\r\n\r\n  const uid = useSelector(state => state.User.uid);\r\n  const layout = useSelector(state => state.Settings.settings.Layout);\r\n  const userType = useSelector(state => state.Settings.userType);\r\n  const chachedTasbihs = useSelector(state => state.TasbihCache);\r\n\r\n  const RemoveTasbih = async () => {\r\n    try {\r\n      if (uid !== \"null\") {\r\n        var tasbihData = await db.doc(path).get();\r\n\r\n        if (counts > 0) {\r\n          var userDocPath = path.split(\"/\")[0];\r\n          var userData = await db.collection(userDocPath).doc(uid).get();\r\n          await userData.ref.collection(\"HistoryTasbihs\").add(historyDataTemplate(tasbihData.data(), \"delete\"));\r\n        }\r\n\r\n        await tasbihData.ref.delete();\r\n      }\r\n\r\n      console.log(\"Tasbih Has Been Removed\");\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const historyDataTemplate = (data, type) => {\r\n    return {\r\n      counts: data.count,\r\n      deletedTime: new Date(),\r\n      deleterPermanently: false,\r\n      operationType: type,\r\n      tasbihId: data.TasbihID,\r\n      tasbihName: data.Name\r\n    };\r\n  };\r\n\r\n  const ResetTasbih = async () => {\r\n    if (counts > 0) {\r\n      var userDocName = path.split(\"/\")[0];\r\n      var tasbihData = await db.doc(path).get();\r\n      var user = await db.collection(userDocName).doc(uid).get();\r\n      if (user) {\r\n        await user.ref.collection(\"HistoryTasbihs\").add(historyDataTemplate(tasbihData.data(), \"reset\"));\r\n        tasbihData.ref.update({ count: 0 });\r\n        setCounts(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const increseCounter = () => {\r\n    if (isTasbihRunnig && !displayContSection) {\r\n      var newCount = counts + 1;\r\n      if (path !== \"\") {\r\n        db.doc(path).get().then(tasbihData => {\r\n          tasbihData.ref.update({ count: newCount });\r\n        });\r\n      }\r\n      setCounts(newCount);\r\n    }\r\n  };\r\n\r\n  const playPauseTasbih = async () => {\r\n    var tasbihData;\r\n    var currentRunning = chachedTasbihs.find(f => f.running === true);\r\n\r\n    if (currentRunning) {\r\n      tasbihData = await db.collection(userType).doc(uid).collection(\"Tasbihs\").doc(currentRunning.ID).get();\r\n      await tasbihData.ref.update({ running: false });\r\n    }\r\n\r\n    tasbihData = await db.collection(userType).doc(uid).collection(\"Tasbihs\").doc(props.tasbihDocID).get()\r\n    await tasbihData.ref.update({ running: !isTasbihRunnig });\r\n  }\r\n\r\n  const toggleMainBody = () => {\r\n    setCountSection(!displayContSection);\r\n  }\r\n\r\n  // useEffect(\r\n  //   () => {\r\n  //     // if (path !== \"\") {\r\n  //     //   let unSub = db.doc(path).onSnapshot(\r\n  //     //     tasbihData => {\r\n  //     //       console.log(\"count Changed\");\r\n  //     //       if (tasbihData.data()) setCounts(tasbihData.data().count);\r\n  //     //     }, err => {\r\n  //     //       unSub();\r\n  //     //     }\r\n  //     //   );\r\n  //     // }\r\n  //   },\r\n  //   [path]\r\n  // );\r\n\r\n  return (\r\n    <div className={layout + \" tasbih-card-shell\"}>\r\n      <div className=\"tasbih-card-inner\">\r\n        <div className=\"middle-card flex\">\r\n          <div className=\"side-panel-r\">\r\n            <span className=\"tasbih-start-pause\" onClick={playPauseTasbih}>\r\n              {!isTasbihRunnig ? <RiPlayFill /> : <RiPauseFill />}\r\n            </span>\r\n            <span className=\"tasbih-record\" onClick={toggleMainBody}>\r\n              <RiTimer2Line className={!displayContSection ? \"move-down ri-timer\" : \"move-up ri-timer \"} />\r\n              <BiHash className={!displayContSection ? \"move-down bi-hash\" : \"move-up bi-hash\"} />\r\n            </span>\r\n          </div>\r\n          <div className=\"main-body relative flex flex-colomn\">\r\n            <div className=\"upper-section header-card-shadow flex\" onClick={increseCounter}>\r\n              <div className=\"tasbih-name\">{name}</div>\r\n            </div>\r\n            <div className=\"bottom-section width-100-per\">\r\n              <div className={!displayContSection ? \"move-down tasbih-counts main-inner flex\" : \"move-up tasbih-counts main-inner flex\"} onClick={increseCounter}>{counts}</div>\r\n              <div className={!displayContSection ? \"move-down timer-panel main-inner flex\" : \"move-up timer-panel main-inner flex\"}>Loadnig data...</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"side-panel-l\">\r\n            <span className=\"tasbih-remove\" onClick={RemoveTasbih}>\r\n              <RiDeleteBin5Line />\r\n            </span>\r\n            <span className=\"tasbih-reset\" onClick={ResetTasbih}>\r\n              <BiReset />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasbihCard;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js",["153","154","155"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from \"../Firebase/firebase.js\";\r\nimport \"./modal.css\";\r\n\r\nimport { updateSettings, saveAvailableTasbihCache } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState(\"Choose Tasbih\");\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const settings = useSelector(s => s.Settings);\r\n  const AvailableTasbihsCached = useSelector(state => state.AvailableTasbihCache);\r\n  const dispach = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  };\r\n\r\n  const handleAddData = () => {\r\n    if (name !== \"\") {\r\n      props.click(name, tid);\r\n      setName(\"Choose Tasbih\");\r\n    } else {\r\n      alert(\"Select Tasbih First\");\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (obj, e) => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function (item) {\r\n      return item.Name === e.target.text;\r\n    });\r\n    setName(e.target.text);\r\n    console.log(val);\r\n    setTID(val[0].ID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (AvailableTasbihsCached) {\r\n      dispach(updateSettings({ totalTasbihsCount: AvailableTasbihsCached.length }));\r\n      setNoOfTasbih(AvailableTasbihsCached);\r\n      return;\r\n    }\r\n\r\n    let unSubs = db\r\n      .collection(\"Tasbihs\")\r\n      .where(\"Visible\", \"==\", true)\r\n      .onSnapshot(\r\n        snap => {\r\n          var noOfTasbihs = snap.docs.map(doc => {\r\n            return { ID: doc.id, Name: doc.data().Name };\r\n          });\r\n\r\n          dispach(\r\n            updateSettings({\r\n              totalTasbihsCount: noOfTasbihs.length\r\n            })\r\n          );\r\n\r\n          setNoOfTasbih(noOfTasbihs);\r\n          dispach(saveAvailableTasbihCache(noOfTasbihs, \"ATCACHE\"));\r\n          if (userDeleted) {\r\n            unSubs();\r\n          }\r\n        },\r\n        er => console.log(er)\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              {/* <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {noOfTasbihs.map(tasbih => {\r\n                  var disable = props.displayedIds.filter(t => {\r\n                    return t === tasbih.ID ? true : false;\r\n                  });\r\n\r\n                  return (\r\n                    <option disabled={disable[0]} key={tasbih.ID}>\r\n                      {tasbih.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select> */}\r\n\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {name}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {noOfTasbihs.map(tasbih => {\r\n                    var disable = props.displayedIds.filter(t => {\r\n                      return t === tasbih.ID ? true : false;\r\n                    });\r\n\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={handleOnChange}\r\n                        disabled={disable[0]}\r\n                        key={tasbih.ID}\r\n                      >\r\n                        {tasbih.Name}\r\n                      </Dropdown.Item>\r\n                    );\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",["156","157"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport GoogleSignIn from \"../../SignIn/GoogleSignIn\";\r\nimport Timer from \"../../Timer/Timer\"\r\n\r\nimport \"./SideNav.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideNav = props => {\r\n  const userDisplayName = useSelector(s => s.User.displayName);\r\n  const profilePic = useSelector(s => s.User.photoURL);\r\n  const isUserAnonymous = useSelector(s => s.User.isAnonymous);\r\n  const [profileDetails, setProfileDetails] = useState({});\r\n\r\n  const setPageConfigs = (pageConfig, activePage) => {\r\n    props.navMan();\r\n    props.setPageName(pageConfig, activePage);\r\n  };\r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    const file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      setProfileDetails({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  return (\r\n    <div className={props.navClass}>\r\n      <div className=\"profile-picture-box\">\r\n        <label htmlFor=\"photo-upload\" className=\"custom-img-upload\">\r\n          <span className=\"overlay\">\r\n            <img htmlFor=\"photo-upload\" className=\"img-upload\" alt=\"img\" src={profilePic ? profilePic : \"favicon.jpg\"} />\r\n            <FontAwesomeIcon className=\"profile-camera\" icon={faCamera} />\r\n          </span>\r\n          <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n        </label>\r\n        <span className=\"user-name\">{userDisplayName ? userDisplayName : \"loading...\"}</span>\r\n      </div>\r\n      <div className=\"content flex\">\r\n        <div className={props.activePage + \" home-page\"}>\r\n          <span\r\n            className=\"home-page-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"My Tasbihs\", \"homepage\")}\r\n          >\r\n            <Link to=\"/\">My Tasbihs</Link>\r\n          </span>\r\n        </div>\r\n        <div className={props.activePage + \" tasbih-history\"}>\r\n          <span\r\n            className=\"tasbih-history-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"History\", \"history\")}\r\n          >\r\n            <Link to=\"/history\">Tasbih History</Link>\r\n          </span>\r\n        </div>\r\n        {/* <div className={props.activePage + \" req-tasbih\"} disable='diasabled'>\r\n          <span\r\n            className=\"tasbih-history-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"Request\", \"request\")}\r\n          >\r\n            <Link to=\"/request-tasbih\">Request Tasbih</Link>\r\n          </span>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"footer flex flex-align-bottom\">\r\n        {/* <div className=\"timer-section\">\r\n          <Timer />\r\n        </div> */}\r\n        {!isUserAnonymous ? (\r\n          <span className=\"log-out-btn\">\r\n            {<button onClick={props.click}>Log Out</button>}\r\n          </span>\r\n        ) : (\r\n\r\n          <span className=\"google-sign-up\">\r\n            <GoogleSignIn />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js",["158","159","160","161","162","163","164","165"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js",["166"],"import React, { useState, useEffect } from 'react'\r\nimport \"./timer.css\"\r\n\r\nfunction Timer() {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [time, setTime] = useState({ \"h\": \"0\", \"m\": \"0\", \"s\": \"0\" });\r\n    const [running, setRunning] = useState(false);\r\n    const [timerReset, setReset] = useState(false);\r\n    let timer;\r\n\r\n    let manageTimer = () => {\r\n        if (running)\r\n            clearTimeout(timer);\r\n\r\n        setRunning(!running);\r\n    }\r\n\r\n    const reset = () => {\r\n        clearTimeout(timer);\r\n        setReset(true);\r\n        setTime({ \"h\": \"0\", \"m\": \"0\", \"s\": \"0\" });\r\n    }\r\n\r\n    const counter = () => {\r\n        if (timerReset) {\r\n            secondToTime(0);\r\n            setRunning(false);\r\n            setReset(false);\r\n        }\r\n        else {\r\n            let tempSeconds = seconds + 1;\r\n            secondToTime(tempSeconds);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timerReset) {\r\n            counter()\r\n            return;\r\n        }\r\n\r\n        if (running)\r\n            timer = setTimeout(counter, 1000)\r\n    }, [seconds, running, timerReset])\r\n\r\n    const secondToTime = (currentSeconds) => {\r\n\r\n        let hours = Math.floor(currentSeconds / (60 * 60));\r\n\r\n        let divisor_for_minutes = currentSeconds % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let _seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        setTime({\r\n            \"h\": hours,\r\n            \"m\": minutes,\r\n            \"s\": _seconds\r\n        })\r\n        setSeconds(currentSeconds);\r\n    }\r\n\r\n    return (\r\n        <div className=\"timer-container\">\r\n            <div className=\"timer flex\">\r\n                <p>{time.h <= 9 ? \"0\" + time.h : time.h}</p>:\r\n                <p>{time.m <= 9 ? \"0\" + time.m : time.m}</p>:\r\n                <p>{time.s <= 9 ? \"0\" + time.s : time.s}</p>\r\n            </div>\r\n            <div className=\"timer-start\">\r\n                <button onClick={manageTimer}>Start/Stop</button>\r\n                <button onClick={reset}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js",["167","168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { auth } from \"../Firebase/firebase\";\r\n\r\nimport \"./guestSignIn.css\";\r\n\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GuestSignInModel = props => {\r\n    const [username, setUsername] = useState(\"Choose Tasbih\");\r\n\r\n    const settings = useSelector(s => s.Settings);\r\n    const currUser = useSelector(s => s.User);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        props.hideModal();\r\n    };\r\n\r\n    const signInGuestUser = () => {\r\n        dispatch(updateSettings({ loading: true }));\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .where(\"Name\", \"==\", username)\r\n            .where(\"Deleted\", \"==\", false)\r\n            .get()\r\n            .then(data => {\r\n                if (!data.empty) {\r\n                    console.log(\"account found\")\r\n                    auth.signInAnonymously().then(loginUser => {\r\n                        const ref = data.docs[0].ref;\r\n                        db\r\n                            .collection(\"GuestUsers\")\r\n                            .doc(loginUser.user.uid)\r\n                            .set({\r\n                                Name: data.docs[0].data().Name,\r\n                                uid: loginUser.user.uid,\r\n                                Deleted: false\r\n                            })\r\n                            .then(userData => {\r\n                                ref.update({ Deleted: true });\r\n                                asyncFunc(ref, loginUser.user);\r\n                            });\r\n                    });\r\n                } else {\r\n                    console.log(\"User Does Not Exists\");\r\n                    dispatch(updateSettings({ loading: false }));\r\n                }\r\n            })\r\n            .catch(er => {\r\n                dispatch(updateSettings({ loading: false }));\r\n                console.log(er);\r\n            });\r\n    };\r\n\r\n    const asyncFunc = async (res, curretUser) => {\r\n        const tasbihs = await res.collection(\"Tasbihs\").get();\r\n        const set = await res.collection(\"Settings\").get();\r\n        const historyTasbihs = await res.collection(\"HistoryTasbihs\").get();\r\n\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .doc(curretUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n                res.delete();\r\n                doc.ref\r\n                    .collection(\"Settings\")\r\n                    .get()\r\n                    .then(doc => {\r\n                        doc.docs[0].ref.delete();\r\n                    });\r\n                extractData(doc.ref, tasbihs, \"Tasbihs\");\r\n                extractData(doc.ref, set, \"Settings\");\r\n                extractData(doc.ref, historyTasbihs, \"HistoryTasbihs\");\r\n\r\n                dispatch(setUpUserData(curretUser));\r\n            });\r\n    };\r\n\r\n    const extractData = (ref, data, type) => {\r\n        data.docs.forEach(data => {\r\n            ref.collection(type).add(data.data());\r\n        });\r\n    };\r\n\r\n    const setusername = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return (\r\n        <Modal show={props.showModal} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Find Account</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"sign-in-with-username\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                onChange={setusername}\r\n                                type=\"text\"\r\n                                placeholder=\"Your Username\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" className=\"save-btn\" onClick={signInGuestUser}>\r\n                    sign in\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default GuestSignInModel;\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":7,"column":16,"nodeType":"176","messageId":"177","endLine":7,"endColumn":24},{"ruleId":"174","severity":1,"message":"179","line":7,"column":26,"nodeType":"176","messageId":"177","endLine":7,"endColumn":32},{"ruleId":"174","severity":1,"message":"180","line":10,"column":22,"nodeType":"176","messageId":"177","endLine":10,"endColumn":28},{"ruleId":"174","severity":1,"message":"181","line":10,"column":30,"nodeType":"176","messageId":"177","endLine":10,"endColumn":37},{"ruleId":"174","severity":1,"message":"182","line":10,"column":51,"nodeType":"176","messageId":"177","endLine":10,"endColumn":57},{"ruleId":"174","severity":1,"message":"183","line":10,"column":59,"nodeType":"176","messageId":"177","endLine":10,"endColumn":65},{"ruleId":"174","severity":1,"message":"184","line":55,"column":9,"nodeType":"176","messageId":"177","endLine":55,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":163,"column":13,"nodeType":"187","endLine":169,"endColumn":4},{"ruleId":"185","severity":1,"message":"188","line":169,"column":6,"nodeType":"189","endLine":169,"endColumn":8,"suggestions":"190"},{"ruleId":"174","severity":1,"message":"191","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":22},{"ruleId":"174","severity":1,"message":"192","line":19,"column":9,"nodeType":"176","messageId":"177","endLine":19,"endColumn":20},{"ruleId":"185","severity":1,"message":"193","line":153,"column":6,"nodeType":"189","endLine":153,"endColumn":16,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"186","line":35,"column":13,"nodeType":"187","endLine":68,"endColumn":4},{"ruleId":"185","severity":1,"message":"195","line":68,"column":6,"nodeType":"189","endLine":68,"endColumn":33,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":21,"column":23,"nodeType":"199","messageId":"200","endLine":21,"endColumn":25},{"ruleId":"197","severity":1,"message":"201","line":48,"column":27,"nodeType":"199","messageId":"200","endLine":48,"endColumn":29},{"ruleId":"197","severity":1,"message":"201","line":59,"column":28,"nodeType":"199","messageId":"200","endLine":59,"endColumn":30},{"ruleId":"174","severity":1,"message":"202","line":11,"column":12,"nodeType":"176","messageId":"177","endLine":11,"endColumn":23},{"ruleId":"185","severity":1,"message":"203","line":72,"column":8,"nodeType":"189","endLine":72,"endColumn":23,"suggestions":"204"},{"ruleId":"174","severity":1,"message":"205","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"206","line":3,"column":67,"nodeType":"176","messageId":"177","endLine":3,"endColumn":76},{"ruleId":"174","severity":1,"message":"207","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":26},{"ruleId":"174","severity":1,"message":"208","line":10,"column":28,"nodeType":"176","messageId":"177","endLine":10,"endColumn":42},{"ruleId":"174","severity":1,"message":"209","line":2,"column":35,"nodeType":"176","messageId":"177","endLine":2,"endColumn":39},{"ruleId":"174","severity":1,"message":"210","line":16,"column":9,"nodeType":"176","messageId":"177","endLine":16,"endColumn":17},{"ruleId":"185","severity":1,"message":"211","line":74,"column":6,"nodeType":"189","endLine":74,"endColumn":8,"suggestions":"212"},{"ruleId":"174","severity":1,"message":"213","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":13},{"ruleId":"174","severity":1,"message":"214","line":17,"column":10,"nodeType":"176","messageId":"177","endLine":17,"endColumn":24},{"ruleId":"174","severity":1,"message":"215","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":10},{"ruleId":"174","severity":1,"message":"216","line":9,"column":14,"nodeType":"176","messageId":"177","endLine":9,"endColumn":18},{"ruleId":"174","severity":1,"message":"217","line":9,"column":63,"nodeType":"176","messageId":"177","endLine":9,"endColumn":76},{"ruleId":"174","severity":1,"message":"218","line":9,"column":88,"nodeType":"176","messageId":"177","endLine":9,"endColumn":98},{"ruleId":"174","severity":1,"message":"219","line":10,"column":51,"nodeType":"176","messageId":"177","endLine":10,"endColumn":56},{"ruleId":"174","severity":1,"message":"220","line":10,"column":58,"nodeType":"176","messageId":"177","endLine":10,"endColumn":63},{"ruleId":"174","severity":1,"message":"221","line":10,"column":77,"nodeType":"176","messageId":"177","endLine":10,"endColumn":86},{"ruleId":"174","severity":1,"message":"222","line":22,"column":13,"nodeType":"176","messageId":"177","endLine":22,"endColumn":25},{"ruleId":"185","severity":1,"message":"223","line":43,"column":21,"nodeType":"224","endLine":43,"endColumn":46},{"ruleId":"174","severity":1,"message":"225","line":2,"column":25,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"210","line":15,"column":11,"nodeType":"176","messageId":"177","endLine":15,"endColumn":19},{"ruleId":"174","severity":1,"message":"226","line":16,"column":11,"nodeType":"176","messageId":"177","endLine":16,"endColumn":19},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","'provider' is defined but never used.","'v9auth' is defined but never used.","'getDoc' is defined but never used.","'getDocs' is defined but never used.","'addDoc' is defined but never used.","'setDoc' is defined but never used.","'xxsetCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'RequestTasbihs' is defined but never used.","'GuestSignIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'v9GuestSignIn'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userType'. Either include them or remove the dependency array.",["231"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'totalCounts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currUser.isAnonymous', 'currUser.uid', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["232"],"'useEffect' is defined but never used.","'RiHashtag' is defined but never used.","'displayComponent' is assigned a value but never used.","'setDisplayComp' is assigned a value but never used.","'Form' is defined but never used.","'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AvailableTasbihsCached', 'dispach', and 'userDeleted'. Either include them or remove the dependency array.",["233"],"'Timer' is defined but never used.","'profileDetails' is assigned a value but never used.","'db' is defined but never used.","'auth' is defined but never used.","'updateProfile' is defined but never used.","'v9Provider' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'deleteDoc' is defined but never used.","'unSubSiteSet' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Dropdown' is defined but never used.","'currUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [setCurrentUser]",{"range":"244","text":"245"},"Update the dependencies array to be: [currUser, v9GuestSignIn]",{"range":"246","text":"247"},"Update the dependencies array to be: [currentUser, dispatch, tasbihCached, userType]",{"range":"248","text":"249"},"Update the dependencies array to be: [cachedHistory, currUser.isAnonymous, currUser.uid, dispatch, props]",{"range":"250","text":"251"},"Update the dependencies array to be: [AvailableTasbihsCached, dispach, userDeleted]",{"range":"252","text":"253"},[5097,5099],"[setCurrentUser]",[5600,5610],"[currUser, v9GuestSignIn]",[2240,2267],"[currentUser, dispatch, tasbihCached, userType]",[2899,2914],"[cachedHistory, currUser.isAnonymous, currUser.uid, dispatch, props]",[2108,2110],"[AvailableTasbihsCached, dispach, userDeleted]"]