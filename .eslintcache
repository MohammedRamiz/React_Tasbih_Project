[{"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js":"1","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js":"2","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js":"3","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js":"4","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js":"5","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js":"6","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js":"7","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js":"8","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js":"9","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js":"10","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js":"11","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js":"12","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js":"13","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js":"14","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js":"15","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js":"16","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js":"17","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js":"18","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js":"19","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js":"20","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js":"21","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js":"22","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js":"23","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js":"24","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"25","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"26","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js":"27","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js":"28","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js":"29"},{"size":712,"mtime":1623325884176,"results":"30","hashOfConfig":"31"},{"size":320,"mtime":1623304155214,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1622439681440,"results":"33","hashOfConfig":"31"},{"size":268,"mtime":1623325339509,"results":"34","hashOfConfig":"31"},{"size":233,"mtime":1623044797541,"results":"35","hashOfConfig":"31"},{"size":377,"mtime":1635313969415,"results":"36","hashOfConfig":"31"},{"size":5332,"mtime":1635511385508,"results":"37","hashOfConfig":"31"},{"size":1369,"mtime":1635406870524,"results":"38","hashOfConfig":"31"},{"size":239,"mtime":1632912488688,"results":"39","hashOfConfig":"31"},{"size":1573,"mtime":1635321269102,"results":"40","hashOfConfig":"31"},{"size":1084,"mtime":1633421274507,"results":"41","hashOfConfig":"31"},{"size":1098,"mtime":1635319308019,"results":"42","hashOfConfig":"31"},{"size":947,"mtime":1635319396964,"results":"43","hashOfConfig":"31"},{"size":726,"mtime":1632296608496,"results":"44","hashOfConfig":"31"},{"size":805,"mtime":1635319741063,"results":"45","hashOfConfig":"31"},{"size":5687,"mtime":1635423334135,"results":"46","hashOfConfig":"31"},{"size":3493,"mtime":1635505223115,"results":"47","hashOfConfig":"31"},{"size":3199,"mtime":1635424383371,"results":"48","hashOfConfig":"31"},{"size":366,"mtime":1634555118388,"results":"49","hashOfConfig":"31"},{"size":1205,"mtime":1632991367727,"results":"50","hashOfConfig":"31"},{"size":4663,"mtime":1635504036910,"results":"51","hashOfConfig":"31"},{"size":490,"mtime":1634555118381,"results":"52","hashOfConfig":"31"},{"size":5286,"mtime":1635510258551,"results":"53","hashOfConfig":"31"},{"size":4779,"mtime":1635424940936,"results":"54","hashOfConfig":"31"},{"size":3185,"mtime":1635321289006,"results":"55","hashOfConfig":"31"},{"size":1106,"mtime":1635310856118,"results":"56","hashOfConfig":"31"},{"size":4010,"mtime":1635423336114,"results":"57","hashOfConfig":"31"},{"size":2166,"mtime":1634555118391,"results":"58","hashOfConfig":"31"},{"size":4430,"mtime":1632381145880,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"5z3sk3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\index.js",[],["127","128"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\App.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reportWebVitals.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\store.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\CountingPage\\TasbihPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\main.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\Load.js",["129","130","131","132","133","134","135","136","137","138"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Firebase\\firebase.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\LandingPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\HomePage.js",["139"],"import React, { useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport Body from \"./Body.js\";\r\nimport History from \"../History/History\";\r\nimport Header from \"../Header/Header.js\";\r\nimport RequestTasbihs from \"../RequestTasbihs/RequestTasbihs.js\"\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst HomePage = props => {\r\n  const [pageName, setPageName] = useState(\"My Tasbihs\");\r\n  const [activePage, setActivePage] = useState(\"homepage\");\r\n  const [historyCounts, setHistoryCounts] = useState(0);\r\n\r\n  const changePageName = (pageName, activePage) => {\r\n    setActivePage(activePage);\r\n    setPageName(pageName);\r\n  };\r\n\r\n  const totalHistoryCount = (counts) => {\r\n    setHistoryCounts(counts);\r\n  }\r\n\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <Header\r\n        click={props.click}\r\n        signIn={props.signIn}\r\n        pageName={pageName}\r\n        setPageName={changePageName}\r\n        activePage={activePage}\r\n        totalCount={historyCounts}\r\n\r\n      />\r\n      <div className=\"inner-container\">\r\n        <Route path=\"/\" exact>\r\n          <Body />\r\n        </Route>\r\n        <Route path=\"/history\">\r\n          <History\r\n            userDeleted={props.userDeleted}\r\n            uid={props.uid}\r\n            isSkipped={props.skip}\r\n            pageName={changePageName}\r\n            countsHandler={totalHistoryCount}\r\n          />\r\n        </Route>\r\n        {/* <Route path=\"/request-tasbih\">\r\n          <RequestTasbihs\r\n            pageName={changePageName} />\r\n        </Route> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\settings.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\firebaseManager.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\reducer\\users.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\LoadPage\\LoadingScreen.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\action\\action.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\SignIn.js",["140","141"],"import React, { useEffect } from \"react\";//useState,\r\nimport db, { auth, v9Auth, signInAnonymously, collection, v9DB, updateProfile } from \"../Firebase/firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\n\r\nimport LoadingScreen from \"../LoadPage/LoadingScreen\"\r\nimport { getDocs, doc, setDoc, addDoc, updateDoc, query, where } from \"firebase/firestore\";\r\n//import { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SignIn = props => {\r\n  const dispatch = useDispatch();\r\n  const settings = useSelector(s => s.Settings);\r\n  const currUser = useSelector(s => s.User);\r\n\r\n  //const [username, setUsername] = useState(\"\");\r\n  //const [isUserNameLoginVisible, setUserNameLogin] = useState(false);\r\n\r\n  //Guest User Sign In\r\n  const GuestSignIn = async () => {\r\n    dispatch(updateSettings({ loading: true }));\r\n    console.log(\"Guest sign in started\");\r\n\r\n    await auth.signInAnonymously().then(async (loginUser) => {\r\n      dispatch(setUpUserData(loginUser.user));\r\n\r\n      var noOfGuests = await db.collection(\"NoOfGuests\").get();\r\n      var newCount = noOfGuests.docs[0].data().count + 1;\r\n      var name = \"Guest\" + newCount;\r\n      await loginUser.user.updateProfile({\r\n        displayName: name,\r\n        uid: new Date().getTime()\r\n      });\r\n\r\n      await db.collection(\"GuestUsers\").doc(loginUser.user.uid).set({ Name: name, uid: loginUser.user.uid, Deleted: false });\r\n      await noOfGuests.docs[0].ref.update({ count: newCount });\r\n\r\n      var gUser = await db.collection(\"GuestUsers\").doc(loginUser.user.uid).get();\r\n      var tasbihs = await db.collection(\"Tasbihs\").where(\"Visible\", \"==\", true).get()\r\n      var allTasbihs = tasbihs.docs.map(doc => doc);\r\n      var randPick = Math.floor(Math.random() * allTasbihs.length);\r\n\r\n      await gUser.ref.collection(\"Tasbihs\").add({\r\n        count: 0,\r\n        TasbihID: allTasbihs[randPick].id,\r\n        Name: allTasbihs[randPick].data().Name,\r\n        Status: \"Running\"\r\n      });\r\n      var set = await gUser.ref.collection(\"Settings\").add(settings.settings)\r\n      console.log(\"Guest sign in ended\");\r\n      dispatch(\r\n        updateSettings({\r\n          isUserIn: true,\r\n          path: set.path,\r\n          // loading: false,\r\n          totalTasbihsCount: allTasbihs.length\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const v9GuestSignIn = async () => {\r\n    dispatch(updateSettings({ loading: true }));\r\n    console.log(\"Guest sign in started\");\r\n\r\n    var guestUserCred = await signInAnonymously(v9Auth);\r\n    console.log(guestUserCred.user);\r\n\r\n    dispatch(setUpUserData(guestUserCred.user));\r\n\r\n    var guestCountCol = await collection(v9DB, \"NoOfGuests\");\r\n    var guestDocs = await getDocs(guestCountCol);\r\n    var noOfGuestCount = guestDocs.docs[0].data().count + 1;\r\n\r\n    var name = \"Guest\" + noOfGuestCount;\r\n    await updateProfile(guestUserCred.user, {\r\n      displayName: name\r\n    });\r\n\r\n    var guestUser = await collection(v9DB, \"GuestUsers\");\r\n    var guestUserDoc = await doc(guestUser, guestUserCred.user.uid);\r\n    await setDoc(guestUserDoc, { Name: name, uid: guestUserCred.user.uid, Deleted: false })\r\n    updateDoc(guestDocs.docs[0].ref, { count: noOfGuestCount });\r\n\r\n\r\n    var tasbihs = await query(await collection(v9DB, \"Tasbihs\"), where(\"Visible\", \"==\", true))\r\n    var allTasbihs = await getDocs(tasbihs)\r\n    console.log(allTasbihs.size);\r\n    var randPick = Math.floor(Math.random() * allTasbihs.size);\r\n\r\n    var userTasbihs = await collection(guestUserDoc, \"Tasbihs\");\r\n    await addDoc(userTasbihs, {\r\n      count: 0,\r\n      TasbihID: allTasbihs.docs[randPick].id,\r\n      Name: allTasbihs.docs[randPick].data().Name,\r\n      running: true\r\n    });\r\n\r\n    var set = await collection(guestUserDoc, \"Settings\");\r\n    var settingDoc = await addDoc(set, settings.settings);\r\n    console.log(\"Guest sign in ended\");\r\n    dispatch(\r\n      updateSettings({\r\n        isUserIn: true,\r\n        path: settingDoc.path,\r\n        totalTasbihsCount: allTasbihs.size\r\n      })\r\n    );\r\n  }\r\n\r\n  //Google Sign In\r\n  // const LoginUser = async () => {\r\n  //   auth.signInWithPopup(provider).then(async (res) => {\r\n  //     //\r\n  //     var retUser = await db.collection(\"Users\").doc(res.user.uid).get();\r\n  //     if (!retUser.exists) {\r\n  //       await db.collection(\"Users\").doc(retUser.id).set({ Name: res.user.displayName, uid: retUser.id })\r\n  //       var updatedUserData = await db.collection(\"Users\").doc(retUser.uid).get()\r\n  //       var tasbihData = await db.collection(\"Tasbihs\").where(\"Visible\", \"==\", true).get()\r\n\r\n  //       var allTasbihs = tasbihData.docs.map(doc => doc);\r\n  //       var randPick = Math.floor(\r\n  //         Math.random() * allTasbihs.length\r\n  //       );\r\n\r\n  //       await updatedUserData.ref.collection(\"Tasbihs\").add({\r\n  //         count: 0,\r\n  //         TasbihID: allTasbihs[randPick].id,\r\n  //         Name: allTasbihs[randPick].data().Name,\r\n  //         Status: \"Running\"\r\n  //       });\r\n  //       await updatedUserData.ref.collection(\"Settings\").add(settings.settings);\r\n\r\n  //       dispatch(setUpUserData(res.user));\r\n\r\n  //       dispatch(\r\n  //         updateSettings({\r\n  //           isUserIn: true,\r\n  //           loading: false,\r\n  //           totalTasbihsCount: allTasbihs.length\r\n  //         })\r\n  //       );\r\n  //     } else {\r\n  //       console.log(\"User found\");\r\n  //       dispatch(updateSettings({ loading: false }));\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log(\"sign in useEffect Called\")\r\n    //GuestSignIn();\r\n    v9GuestSignIn();\r\n  }, [currUser]);\r\n\r\n  return (\r\n    <LoadingScreen />\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\Body.js",["142","143","144"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Header\\Header.js",["145","146","147","148"],"import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SideNav from \"../NavigationMenu/SideNav/SideNav.js\";\r\nimport { v9DB } from \"../Firebase/firebase\";\r\nimport { updateDoc, doc } from \"firebase/firestore\"\r\nimport { RiLayoutRowLine, RiLayoutColumnLine } from \"react-icons/ri\";\r\nimport { BrowserView, MobileView, isMobile } from \"react-device-detect\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = props => {\r\n  const [sidebar, setsidebar] = useState(false);\r\n  const settings = useSelector(state => state.Settings);\r\n\r\n  const OpenSideNavigation = () => {\r\n    setsidebar(!sidebar);\r\n  };\r\n\r\n  const ChangeLayout = async () => {\r\n    if (settings.path != \"\") {\r\n      if (isMobile) {\r\n        var setDoc = await doc(v9DB, settings.path)\r\n        await updateDoc(setDoc, { Layout: \"colomn-layout\" });\r\n        return;\r\n      }\r\n      const layout =\r\n        settings.settings.Layout === \"colomn-layout\"\r\n          ? \"row-layout\"\r\n          : \"colomn-layout\";\r\n\r\n      var setDoc = await doc(v9DB, settings.path)\r\n      await updateDoc(setDoc, { Layout: layout });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-bar\">\r\n      <div className=\"left-h sub-header\">\r\n        <div className=\"menu-bar\">\r\n          <MobileView>\r\n            <span className=\"Bar-class\" onClick={OpenSideNavigation}>\r\n              <FontAwesomeIcon icon={faBars} />\r\n            </span>\r\n          </MobileView>\r\n          <div className=\"page-name\">\r\n            <span>{props.pageName}</span>\r\n          </div>\r\n          {props.pageName == \"My Tasbihs\" ? (\r\n            isMobile ? (ChangeLayout()) : (\r\n              <span className=\"layout\" onClick={ChangeLayout}>\r\n                {settings.settings.Layout === \"colomn-layout\" ? (\r\n                  <RiLayoutColumnLine />\r\n                ) : (\r\n                  <RiLayoutRowLine />\r\n                )}\r\n              </span>\r\n            )\r\n          ) : (\r\n            props.pageName == \"Request\" ? (\"\") : (\r\n              <span className=\"history-total-count layout\">\r\n                {props.totalCount}\r\n              </span>\r\n            )\r\n          )}\r\n        </div>\r\n        <MobileView>\r\n          <SideNav\r\n            navClass={\r\n              sidebar ? (\r\n                \"side-navigation nav-menu open\"\r\n              ) : (\r\n                \"side-navigation nav-menu\"\r\n              )\r\n            }\r\n            click={props.click}\r\n            navMan={OpenSideNavigation}\r\n            setPageName={props.setPageName}\r\n            activePage={props.activePage}\r\n          />\r\n        </MobileView>\r\n        <BrowserView>\r\n          <SideNav\r\n            navClass=\"side-navigation nav-menu\"\r\n            navMan={OpenSideNavigation}\r\n            click={props.click}\r\n            setPageName={props.setPageName}\r\n            activePage={props.activePage}\r\n          />\r\n        </BrowserView>\r\n        <div\r\n          className={sidebar ? \"backbone open\" : \"backbone\"}\r\n          onClick={OpenSideNavigation}\r\n        />\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\RequestTasbihs\\RequestTasbihs.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\LandingPage\\Top\\SliderPage.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\History.js",["149","150","151","152","153","154"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihDotedCard.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Home\\TasbihCard.js",["155","156","157","158","159","160"],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\AddBody.js",["161","162","163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./modal.css\";\r\n\r\nimport db, { v9DB, collection } from \"../Firebase/firebase.js\";\r\nimport { query, onSnapshot, where } from 'firebase/firestore'\r\n\r\nimport { updateSettings, saveAvailableTasbihCache } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState(\"Choose Tasbih\");\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const settings = useSelector(s => s.Settings);\r\n  const AvailableTasbihsCached = useSelector(state => state.AvailableTasbihCache);\r\n  const dispach = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  };\r\n\r\n  const handleAddData = () => {\r\n    if (name !== \"\") {\r\n      props.click(name, tid);\r\n      setName(\"Choose Tasbih\");\r\n    } else {\r\n      alert(\"Select Tasbih First\");\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (obj, e) => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function (item) {\r\n      return item.Name === e.target.text;\r\n    });\r\n    setName(e.target.text);\r\n    console.log(val);\r\n    setTID(val[0].ID);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (AvailableTasbihsCached) {\r\n      dispach(updateSettings({ totalTasbihsCount: AvailableTasbihsCached.length }));\r\n      setNoOfTasbih(AvailableTasbihsCached);\r\n      return;\r\n    }\r\n\r\n\r\n    var tasbihCol = await query(await collection(v9DB, \"Tasbihs\"), where(\"Visible\", \"==\", true));\r\n    var unSubTasvihCol = onSnapshot(tasbihCol, async tasbihs => {\r\n      var noOfTasbihs = tasbihs.docs.map(doc => {\r\n        return { ID: doc.id, Name: doc.data().Name };\r\n      });\r\n\r\n      dispach(\r\n        updateSettings({\r\n          totalTasbihsCount: noOfTasbihs.length\r\n        })\r\n      );\r\n\r\n      setNoOfTasbih(noOfTasbihs);\r\n      dispach(saveAvailableTasbihCache(noOfTasbihs, \"ATCACHE\"));\r\n\r\n      if (userDeleted) {\r\n        unSubTasvihCol();\r\n      }\r\n    })\r\n\r\n    // let unSubs = db\r\n    //   .collection(\"Tasbihs\")\r\n    //   .where(\"Visible\", \"==\", true)\r\n    //   .onSnapshot(\r\n    //     snap => {\r\n    //       var noOfTasbihs = snap.docs.map(doc => {\r\n    //         return { ID: doc.id, Name: doc.data().Name };\r\n    //       });\r\n\r\n    //       dispach(\r\n    //         updateSettings({\r\n    //           totalTasbihsCount: noOfTasbihs.length\r\n    //         })\r\n    //       );\r\n\r\n    //       setNoOfTasbih(noOfTasbihs);\r\n    //       dispach(saveAvailableTasbihCache(noOfTasbihs, \"ATCACHE\"));\r\n    //       if (userDeleted) {\r\n    //         unSubs();\r\n    //       }\r\n    //     },\r\n    //     er => console.log(er)\r\n    //   );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              {/* <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {noOfTasbihs.map(tasbih => {\r\n                  var disable = props.displayedIds.filter(t => {\r\n                    return t === tasbih.ID ? true : false;\r\n                  });\r\n\r\n                  return (\r\n                    <option disabled={disable[0]} key={tasbih.ID}>\r\n                      {tasbih.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select> */}\r\n\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {name}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {noOfTasbihs.map(tasbih => {\r\n                    var disable = props.displayedIds.filter(t => {\r\n                      return t === tasbih.ID ? true : false;\r\n                    });\r\n\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={handleOnChange}\r\n                        disabled={disable[0]}\r\n                        key={tasbih.ID}\r\n                      >\r\n                        {tasbih.Name}\r\n                      </Dropdown.Item>\r\n                    );\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",["165","166"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport GoogleSignIn from \"../../SignIn/GoogleSignIn\";\r\nimport Timer from \"../../Timer/Timer\"\r\n\r\nimport \"./SideNav.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideNav = props => {\r\n  const userDisplayName = useSelector(s => s.User.displayName);\r\n  const profilePic = useSelector(s => s.User.photoURL);\r\n  const isUserAnonymous = useSelector(s => s.User.isAnonymous);\r\n  const [profileDetails, setProfileDetails] = useState({});\r\n\r\n  const setPageConfigs = (pageConfig, activePage) => {\r\n    props.navMan();\r\n    props.setPageName(pageConfig, activePage);\r\n  };\r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    const file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      setProfileDetails({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  return (\r\n    <div className={props.navClass}>\r\n      <div className=\"profile-picture-box\">\r\n        <label htmlFor=\"photo-upload\" className=\"custom-img-upload\">\r\n          <span className=\"overlay\">\r\n            <img htmlFor=\"photo-upload\" className=\"img-upload\" alt=\"img\" src={profilePic ? profilePic : \"favicon.jpg\"} />\r\n            <FontAwesomeIcon className=\"profile-camera\" icon={faCamera} />\r\n          </span>\r\n          <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n        </label>\r\n        <span className=\"user-name\">{userDisplayName ? userDisplayName : \"loading...\"}</span>\r\n      </div>\r\n      <div className=\"content flex\">\r\n        <div className={props.activePage + \" home-page\"}>\r\n          <span\r\n            className=\"home-page-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"My Tasbihs\", \"homepage\")}\r\n          >\r\n            <Link to=\"/\">My Tasbihs</Link>\r\n          </span>\r\n        </div>\r\n        <div className={props.activePage + \" tasbih-history\"}>\r\n          <span\r\n            className=\"tasbih-history-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"History\", \"history\")}\r\n          >\r\n            <Link to=\"/history\">Tasbih History</Link>\r\n          </span>\r\n        </div>\r\n        {/* <div className={props.activePage + \" req-tasbih\"} disable='diasabled'>\r\n          <span\r\n            className=\"tasbih-history-btn content-btn\"\r\n            onClick={() => setPageConfigs(\"Request\", \"request\")}\r\n          >\r\n            <Link to=\"/request-tasbih\">Request Tasbih</Link>\r\n          </span>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"footer flex flex-align-bottom\">\r\n        {/* <div className=\"timer-section\">\r\n          <Timer />\r\n        </div> */}\r\n        {!isUserAnonymous ? (\r\n          <span className=\"log-out-btn\">\r\n            {<button onClick={props.click}>Log Out</button>}\r\n          </span>\r\n        ) : (\r\n\r\n          <span className=\"google-sign-up\">\r\n            <GoogleSignIn />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],"F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\SignIn\\GoogleSignIn.js",["167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\nimport GuestSignInModal from \"../ExtraComps/GuestSignInModel\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\n\r\nimport db, { auth, v9Auth, signInWithPopup, collection, v9DB, updateProfile, provider, v9Provider } from \"../Firebase/firebase\";\r\nimport { getDocs, doc, setDoc, addDoc, updateDoc, query, where, onSnapshot, deleteDoc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\nfunction GoogleSignIn() {\r\n    const dispatch = useDispatch();\r\n    const currUser = useSelector(s => s.User);\r\n    const [isUserNameLoginVisible, setUserNameLogin] = useState(false);\r\n    const [show, setShowModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        var siteSet = collection(v9DB, \"SiteSettings\");\r\n        var unSubSiteSet = onSnapshot(siteSet, siteSetting => {\r\n            setUserNameLogin(siteSetting.docs[0].data().IsUserNameLoginVisible);\r\n        });\r\n    }, []);\r\n\r\n    const signIn = async () => {\r\n        try {\r\n            dispatch(\r\n                updateSettings({ loading: true })\r\n            );\r\n            const currentUser = await fetchCurrentSavedData();\r\n            var newUserCred = await signInWithPopup(v9Auth, provider);\r\n            var UsersCol = await collection(v9DB, \"Users\");\r\n            var user = await doc(UsersCol, newUserCred.user.uid);\r\n            var newDoc = await getDoc(user);\r\n\r\n            if (!newDoc.exists()) {\r\n                await setDoc(user, {\r\n                    Name: newUserCred.user.displayName,\r\n                    uid: user.id\r\n                });\r\n                await updateDoc(currentUser, { Deleted: true });\r\n                setUserDataInFirebase(currentUser, newUserCred.user);\r\n            } else {\r\n                console.log(\"User found\");\r\n                dispatch(setUpUserData(newUserCred.user));\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            dispatch(updateSettings({ loading: false }));\r\n        }\r\n    }\r\n\r\n    const setUserDataInFirebase = async (oldUser, curretUser) => {\r\n        const tasbihs = await getDocs(await collection(oldUser, \"Tasbihs\"));\r\n        const set = await getDocs(await collection(oldUser, \"Settings\"));\r\n        const historyTasbihs = await getDocs(await collection(oldUser, \"HistoryTasbihs\"));\r\n\r\n        const userDoc = await doc(await collection(v9DB, \"Users\"), curretUser.uid);\r\n\r\n        extractDataAndInsert(userDoc, tasbihs, \"Tasbihs\");\r\n        extractDataAndInsert(userDoc, set, \"Settings\");\r\n        extractDataAndInsert(userDoc, historyTasbihs, \"HistoryTasbihs\");\r\n\r\n        dispatch(setUpUserData(curretUser));\r\n        window.location.reload();\r\n    };\r\n\r\n    const extractDataAndInsert = async (ref, data, type) => {\r\n        data.docs.forEach(async (_data) => {\r\n            var col = await collection(ref, type);\r\n            await addDoc(col, _data.data());\r\n        });\r\n    };\r\n\r\n    const showModalView = () => {\r\n        setShowModal(!show);\r\n    }\r\n\r\n    const fetchCurrentSavedData = async () => {\r\n        var guestUsers = await collection(v9DB, \"GuestUsers\")\r\n        var guestUserdoc = doc(guestUsers, currUser.uid);\r\n        return guestUserdoc;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isUserNameLoginVisible ? (\r\n                    <button onClick={showModalView} >\r\n                        <span>Sign In to other occount</span>\r\n                    </button >) : \"\"\r\n            }\r\n            <button onClick={signIn}>\r\n                <span>Sign In with</span>\r\n                <span>\r\n                    <FontAwesomeIcon className=\"google-icon\" icon={faGoogle} />\r\n                </span>\r\n            </button>\r\n            <GuestSignInModal showModal={show} hideModal={showModalView} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GoogleSignIn\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\Timer\\Timer.js",["175"],"import React, { useState, useEffect } from 'react'\r\nimport \"./timer.css\"\r\n\r\nfunction Timer() {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [time, setTime] = useState({ \"h\": \"0\", \"m\": \"0\", \"s\": \"0\" });\r\n    const [running, setRunning] = useState(false);\r\n    const [timerReset, setReset] = useState(false);\r\n    let timer;\r\n\r\n    let manageTimer = () => {\r\n        if (running)\r\n            clearTimeout(timer);\r\n\r\n        setRunning(!running);\r\n    }\r\n\r\n    const reset = () => {\r\n        clearTimeout(timer);\r\n        setReset(true);\r\n        setTime({ \"h\": \"0\", \"m\": \"0\", \"s\": \"0\" });\r\n    }\r\n\r\n    const counter = () => {\r\n        if (timerReset) {\r\n            secondToTime(0);\r\n            setRunning(false);\r\n            setReset(false);\r\n        }\r\n        else {\r\n            let tempSeconds = seconds + 1;\r\n            secondToTime(tempSeconds);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timerReset) {\r\n            counter()\r\n            return;\r\n        }\r\n\r\n        if (running)\r\n            timer = setTimeout(counter, 1000)\r\n    }, [seconds, running, timerReset])\r\n\r\n    const secondToTime = (currentSeconds) => {\r\n\r\n        let hours = Math.floor(currentSeconds / (60 * 60));\r\n\r\n        let divisor_for_minutes = currentSeconds % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let _seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        setTime({\r\n            \"h\": hours,\r\n            \"m\": minutes,\r\n            \"s\": _seconds\r\n        })\r\n        setSeconds(currentSeconds);\r\n    }\r\n\r\n    return (\r\n        <div className=\"timer-container\">\r\n            <div className=\"timer flex\">\r\n                <p>{time.h <= 9 ? \"0\" + time.h : time.h}</p>:\r\n                <p>{time.m <= 9 ? \"0\" + time.m : time.m}</p>:\r\n                <p>{time.s <= 9 ? \"0\" + time.s : time.s}</p>\r\n            </div>\r\n            <div className=\"timer-start\">\r\n                <button onClick={manageTimer}>Start/Stop</button>\r\n                <button onClick={reset}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","F:\\Projects\\Practices\\React\\React_Tasbih_Project\\src\\Componets\\ExtraComps\\GuestSignInModel.js",["176","177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Dropdown, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { auth } from \"../Firebase/firebase\";\r\n\r\nimport \"./guestSignIn.css\";\r\n\r\nimport { updateSettings, setUpUserData } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GuestSignInModel = props => {\r\n    const [username, setUsername] = useState(\"Choose Tasbih\");\r\n\r\n    const settings = useSelector(s => s.Settings);\r\n    const currUser = useSelector(s => s.User);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        props.hideModal();\r\n    };\r\n\r\n    const signInGuestUser = () => {\r\n        dispatch(updateSettings({ loading: true }));\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .where(\"Name\", \"==\", username)\r\n            .where(\"Deleted\", \"==\", false)\r\n            .get()\r\n            .then(data => {\r\n                if (!data.empty) {\r\n                    console.log(\"account found\")\r\n                    auth.signInAnonymously().then(loginUser => {\r\n                        const ref = data.docs[0].ref;\r\n                        db\r\n                            .collection(\"GuestUsers\")\r\n                            .doc(loginUser.user.uid)\r\n                            .set({\r\n                                Name: data.docs[0].data().Name,\r\n                                uid: loginUser.user.uid,\r\n                                Deleted: false\r\n                            })\r\n                            .then(userData => {\r\n                                ref.update({ Deleted: true });\r\n                                asyncFunc(ref, loginUser.user);\r\n                            });\r\n                    });\r\n                } else {\r\n                    console.log(\"User Does Not Exists\");\r\n                    dispatch(updateSettings({ loading: false }));\r\n                }\r\n            })\r\n            .catch(er => {\r\n                dispatch(updateSettings({ loading: false }));\r\n                console.log(er);\r\n            });\r\n    };\r\n\r\n    const asyncFunc = async (res, curretUser) => {\r\n        const tasbihs = await res.collection(\"Tasbihs\").get();\r\n        const set = await res.collection(\"Settings\").get();\r\n        const historyTasbihs = await res.collection(\"HistoryTasbihs\").get();\r\n\r\n        db\r\n            .collection(\"GuestUsers\")\r\n            .doc(curretUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n                res.delete();\r\n                doc.ref\r\n                    .collection(\"Settings\")\r\n                    .get()\r\n                    .then(doc => {\r\n                        doc.docs[0].ref.delete();\r\n                    });\r\n                extractData(doc.ref, tasbihs, \"Tasbihs\");\r\n                extractData(doc.ref, set, \"Settings\");\r\n                extractData(doc.ref, historyTasbihs, \"HistoryTasbihs\");\r\n\r\n                dispatch(setUpUserData(curretUser));\r\n            });\r\n    };\r\n\r\n    const extractData = (ref, data, type) => {\r\n        data.docs.forEach(data => {\r\n            ref.collection(type).add(data.data());\r\n        });\r\n    };\r\n\r\n    const setusername = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return (\r\n        <Modal show={props.showModal} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Find Account</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"sign-in-with-username\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                onChange={setusername}\r\n                                type=\"text\"\r\n                                placeholder=\"Your Username\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" className=\"save-btn\" onClick={signInGuestUser}>\r\n                    sign in\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default GuestSignInModel;\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"187","line":7,"column":16,"nodeType":"185","messageId":"186","endLine":7,"endColumn":24},{"ruleId":"183","severity":1,"message":"188","line":7,"column":26,"nodeType":"185","messageId":"186","endLine":7,"endColumn":32},{"ruleId":"183","severity":1,"message":"189","line":10,"column":22,"nodeType":"185","messageId":"186","endLine":10,"endColumn":28},{"ruleId":"183","severity":1,"message":"190","line":10,"column":30,"nodeType":"185","messageId":"186","endLine":10,"endColumn":37},{"ruleId":"183","severity":1,"message":"191","line":10,"column":51,"nodeType":"185","messageId":"186","endLine":10,"endColumn":57},{"ruleId":"183","severity":1,"message":"192","line":10,"column":59,"nodeType":"185","messageId":"186","endLine":10,"endColumn":65},{"ruleId":"183","severity":1,"message":"193","line":55,"column":9,"nodeType":"185","messageId":"186","endLine":55,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":164,"column":13,"nodeType":"196","endLine":170,"endColumn":4},{"ruleId":"194","severity":1,"message":"197","line":170,"column":6,"nodeType":"198","endLine":170,"endColumn":8,"suggestions":"199"},{"ruleId":"183","severity":1,"message":"200","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":22},{"ruleId":"183","severity":1,"message":"201","line":19,"column":9,"nodeType":"185","messageId":"186","endLine":19,"endColumn":20},{"ruleId":"194","severity":1,"message":"202","line":153,"column":6,"nodeType":"198","endLine":153,"endColumn":16,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"204","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":10},{"ruleId":"194","severity":1,"message":"195","line":37,"column":13,"nodeType":"196","endLine":70,"endColumn":4},{"ruleId":"194","severity":1,"message":"205","line":70,"column":6,"nodeType":"198","endLine":70,"endColumn":33,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":22,"column":23,"nodeType":"209","messageId":"210","endLine":22,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":33,"column":11,"nodeType":"185","messageId":"213","endLine":33,"endColumn":17},{"ruleId":"207","severity":1,"message":"214","line":50,"column":27,"nodeType":"209","messageId":"210","endLine":50,"endColumn":29},{"ruleId":"207","severity":1,"message":"214","line":61,"column":28,"nodeType":"209","messageId":"210","endLine":61,"endColumn":30},{"ruleId":"183","severity":1,"message":"204","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":10},{"ruleId":"183","severity":1,"message":"189","line":4,"column":26,"nodeType":"185","messageId":"186","endLine":4,"endColumn":32},{"ruleId":"183","severity":1,"message":"190","line":4,"column":34,"nodeType":"185","messageId":"186","endLine":4,"endColumn":41},{"ruleId":"183","severity":1,"message":"215","line":12,"column":12,"nodeType":"185","messageId":"186","endLine":12,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":29,"column":15,"nodeType":"196","endLine":96,"endColumn":6},{"ruleId":"194","severity":1,"message":"216","line":96,"column":8,"nodeType":"198","endLine":96,"endColumn":23,"suggestions":"217"},{"ruleId":"183","severity":1,"message":"218","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"204","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":10},{"ruleId":"183","severity":1,"message":"219","line":4,"column":67,"nodeType":"185","messageId":"186","endLine":4,"endColumn":76},{"ruleId":"183","severity":1,"message":"220","line":11,"column":10,"nodeType":"185","messageId":"186","endLine":11,"endColumn":26},{"ruleId":"183","severity":1,"message":"221","line":11,"column":28,"nodeType":"185","messageId":"186","endLine":11,"endColumn":42},{"ruleId":"211","severity":1,"message":"222","line":83,"column":11,"nodeType":"185","messageId":"213","endLine":83,"endColumn":21},{"ruleId":"183","severity":1,"message":"204","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":10},{"ruleId":"183","severity":1,"message":"223","line":18,"column":9,"nodeType":"185","messageId":"186","endLine":18,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":46,"column":13,"nodeType":"196","endLine":97,"endColumn":4},{"ruleId":"194","severity":1,"message":"224","line":97,"column":6,"nodeType":"198","endLine":97,"endColumn":8,"suggestions":"225"},{"ruleId":"183","severity":1,"message":"226","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":13},{"ruleId":"183","severity":1,"message":"227","line":17,"column":10,"nodeType":"185","messageId":"186","endLine":17,"endColumn":24},{"ruleId":"183","severity":1,"message":"204","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":10},{"ruleId":"183","severity":1,"message":"228","line":9,"column":14,"nodeType":"185","messageId":"186","endLine":9,"endColumn":18},{"ruleId":"183","severity":1,"message":"229","line":9,"column":63,"nodeType":"185","messageId":"186","endLine":9,"endColumn":76},{"ruleId":"183","severity":1,"message":"230","line":9,"column":88,"nodeType":"185","messageId":"186","endLine":9,"endColumn":98},{"ruleId":"183","severity":1,"message":"231","line":10,"column":51,"nodeType":"185","messageId":"186","endLine":10,"endColumn":56},{"ruleId":"183","severity":1,"message":"232","line":10,"column":58,"nodeType":"185","messageId":"186","endLine":10,"endColumn":63},{"ruleId":"183","severity":1,"message":"233","line":10,"column":77,"nodeType":"185","messageId":"186","endLine":10,"endColumn":86},{"ruleId":"183","severity":1,"message":"234","line":22,"column":13,"nodeType":"185","messageId":"186","endLine":22,"endColumn":25},{"ruleId":"194","severity":1,"message":"235","line":43,"column":21,"nodeType":"236","endLine":43,"endColumn":46},{"ruleId":"183","severity":1,"message":"237","line":2,"column":25,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"223","line":15,"column":11,"nodeType":"185","messageId":"186","endLine":15,"endColumn":19},{"ruleId":"183","severity":1,"message":"238","line":16,"column":11,"nodeType":"185","messageId":"186","endLine":16,"endColumn":19},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","'provider' is defined but never used.","'v9auth' is defined but never used.","'getDoc' is defined but never used.","'getDocs' is defined but never used.","'addDoc' is defined but never used.","'setDoc' is defined but never used.","'xxsetCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'RequestTasbihs' is defined but never used.","'GuestSignIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'v9GuestSignIn'. Either include it or remove the dependency array.",["242"],"'db' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userType'. Either include them or remove the dependency array.",["243"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'setDoc' is already defined.","redeclared","Expected '===' and instead saw '=='.","'totalCounts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currUser.isAnonymous', 'currUser.uid', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["244"],"'useEffect' is defined but never used.","'RiHashtag' is defined but never used.","'displayComponent' is assigned a value but never used.","'setDisplayComp' is assigned a value but never used.","'tasbihData' is already defined.","'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AvailableTasbihsCached', 'dispach', and 'userDeleted'. Either include them or remove the dependency array.",["245"],"'Timer' is defined but never used.","'profileDetails' is assigned a value but never used.","'auth' is defined but never used.","'updateProfile' is defined but never used.","'v9Provider' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'deleteDoc' is defined but never used.","'unSubSiteSet' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Dropdown' is defined but never used.","'currUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [setCurrentUser]",{"range":"256","text":"257"},"Update the dependencies array to be: [currUser, v9GuestSignIn]",{"range":"258","text":"259"},"Update the dependencies array to be: [currentUser, dispatch, tasbihCached, userType]",{"range":"260","text":"261"},"Update the dependencies array to be: [cachedHistory, currUser.isAnonymous, currUser.uid, dispatch, props]",{"range":"262","text":"263"},"Update the dependencies array to be: [AvailableTasbihsCached, dispach, userDeleted]",{"range":"264","text":"265"},[5100,5102],"[setCurrentUser]",[5600,5610],"[currUser, v9GuestSignIn]",[2385,2412],"[currentUser, dispatch, tasbihCached, userType]",[4049,4064],"[cachedHistory, currUser.isAnonymous, currUser.uid, dispatch, props]",[2835,2837],"[AvailableTasbihsCached, dispach, userDeleted]"]