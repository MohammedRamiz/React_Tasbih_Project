[{"E:\\React App\\tbh-app\\src\\index.js":"1","E:\\React App\\tbh-app\\src\\reportWebVitals.js":"2","E:\\React App\\tbh-app\\src\\App.js":"3","E:\\React App\\tbh-app\\src\\store.js":"4","E:\\React App\\tbh-app\\src\\Componets\\CountingPage\\TasbihPage.js":"5","E:\\React App\\tbh-app\\src\\reducer\\main.js":"6","E:\\React App\\tbh-app\\src\\Componets\\LoadPage\\Load.js":"7","E:\\React App\\tbh-app\\src\\Componets\\Firebase\\firebase.js":"8","E:\\React App\\tbh-app\\src\\Componets\\Home\\HomePage.js":"9","E:\\React App\\tbh-app\\src\\reducer\\settings.js":"10","E:\\React App\\tbh-app\\src\\reducer\\users.js":"11","E:\\React App\\tbh-app\\src\\reducer\\firebaseManager.js":"12","E:\\React App\\tbh-app\\src\\action\\action.js":"13","E:\\React App\\tbh-app\\src\\Componets\\SignIn\\SignIn.js":"14","E:\\React App\\tbh-app\\src\\Componets\\Home\\Body.js":"15","E:\\React App\\tbh-app\\src\\Componets\\Header\\Header.js":"16","E:\\React App\\tbh-app\\src\\Componets\\History\\History.js":"17","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihCard.js":"18","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihDotedCard.js":"19","E:\\React App\\tbh-app\\src\\Componets\\ExtraComps\\AddBody.js":"20","E:\\React App\\tbh-app\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js":"21","E:\\React App\\tbh-app\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js":"22"},{"size":712,"mtime":1623495410469,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":320,"mtime":1623495410457,"results":"26","hashOfConfig":"24"},{"size":268,"mtime":1623495410470,"results":"27","hashOfConfig":"24"},{"size":233,"mtime":1622891890567,"results":"28","hashOfConfig":"24"},{"size":266,"mtime":1623496789633,"results":"29","hashOfConfig":"24"},{"size":9629,"mtime":1623605979674,"results":"30","hashOfConfig":"24"},{"size":731,"mtime":1623579230539,"results":"31","hashOfConfig":"24"},{"size":1163,"mtime":1623495410466,"results":"32","hashOfConfig":"24"},{"size":1104,"mtime":1623495410469,"results":"33","hashOfConfig":"24"},{"size":215,"mtime":1623495410469,"results":"34","hashOfConfig":"24"},{"size":478,"mtime":1623607680050,"results":"35","hashOfConfig":"24"},{"size":390,"mtime":1623497584496,"results":"36","hashOfConfig":"24"},{"size":7004,"mtime":1623607113198,"results":"37","hashOfConfig":"24"},{"size":5340,"mtime":1623495410465,"results":"38","hashOfConfig":"24"},{"size":2126,"mtime":1623495410458,"results":"39","hashOfConfig":"24"},{"size":2469,"mtime":1623495410465,"results":"40","hashOfConfig":"24"},{"size":4745,"mtime":1623495410466,"results":"41","hashOfConfig":"24"},{"size":484,"mtime":1623495410467,"results":"42","hashOfConfig":"24"},{"size":2817,"mtime":1623495410457,"results":"43","hashOfConfig":"24"},{"size":1461,"mtime":1623495410468,"results":"44","hashOfConfig":"24"},{"size":993,"mtime":1623495410465,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1cmtii9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\React App\\tbh-app\\src\\index.js",[],["95","96"],"E:\\React App\\tbh-app\\src\\reportWebVitals.js",[],"E:\\React App\\tbh-app\\src\\App.js",[],"E:\\React App\\tbh-app\\src\\store.js",[],"E:\\React App\\tbh-app\\src\\Componets\\CountingPage\\TasbihPage.js",[],"E:\\React App\\tbh-app\\src\\reducer\\main.js",[],"E:\\React App\\tbh-app\\src\\Componets\\LoadPage\\Load.js",["97","98"],"E:\\React App\\tbh-app\\src\\Componets\\Firebase\\firebase.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\HomePage.js",[],"E:\\React App\\tbh-app\\src\\reducer\\settings.js",[],"E:\\React App\\tbh-app\\src\\reducer\\users.js",[],"E:\\React App\\tbh-app\\src\\reducer\\firebaseManager.js",[],"E:\\React App\\tbh-app\\src\\action\\action.js",[],"E:\\React App\\tbh-app\\src\\Componets\\SignIn\\SignIn.js",[],"E:\\React App\\tbh-app\\src\\Componets\\Home\\Body.js",["99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport TasbihDotedCard from \"./TasbihDotedCard.js\";\r\nimport TasbihCard from \"./TasbihCard.js\";\r\nimport ModalShow from \"../ExtraComps/AddBody.js\";\r\nimport db from \"../Firebase/firebase.js\";\r\nimport { useSelector } from \"react-redux\";\r\n//import { super } from '@babel/types';\r\n\r\nconst Body = props => {\r\n  const [noOfTasbih, setNoOfTasbih] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUID] = useState(props.uid);\r\n  const isSkipped = useSelector(state => state.User.isAnonymous);\r\n\r\n  const [isLoading, setLoading] = useState(true);\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const currentUser = useSelector(state => state.User);\r\n  const totalTasbihsCount = useSelector(s => s.Settings.totalTasbihsCount);\r\n\r\n  const setModalView = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const appendNewBlock = (tasbihName, tid, totalTasbihsCount) => {\r\n    if (tasbihName) {\r\n      if (!isSkipped) {\r\n        db\r\n          .collection(\"Users\")\r\n          .doc(currentUser.uid)\r\n          .get()\r\n          .then(user => {\r\n            user.ref\r\n              .collection(\"Tasbihs\")\r\n              .add({\r\n                Status: \"Running\",\r\n                Name: tasbihName,\r\n                TasbihID: tid,\r\n                count: 0\r\n              })\r\n              .then(user => {\r\n                console.log(\"Tasbih Added To Collection\");\r\n              });\r\n          });\r\n\r\n        setShow(false);\r\n        //setTotalTasbihCounts(totalTasbihsCount);\r\n      } else {\r\n        db\r\n          .collection(\"GuestUsers\")\r\n          .doc(currentUser.uid)\r\n          .get()\r\n          .then(user => {\r\n            user.ref\r\n              .collection(\"Tasbihs\")\r\n              .add({\r\n                Status: \"Running\",\r\n                Name: tasbihName,\r\n                TasbihID: tid,\r\n                count: 0\r\n              })\r\n              .then(user => {\r\n                console.log(\"Tasbih Added To Collection\");\r\n              })\r\n              .catch(er => {\r\n                console.log(er);\r\n              });\r\n          })\r\n          .catch(er => {\r\n            console.log(er);\r\n          });\r\n        setShow(false);\r\n        //setTotalTasbihCounts(totalTasbihsCount);\r\n      }\r\n    }\r\n  };\r\n\r\n  //   const onTasbihsChange = totalTasbihs => {\r\n  //     setTotalTasbihCounts(totalTasbihs);\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    setNoOfTasbih([]);\r\n    setUID(props.uid);\r\n\r\n    if (isSkipped) {\r\n      if (!userDeleted) {\r\n        let unSubs = db\r\n          .collection(\"GuestUsers\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"Tasbihs\")\r\n          .onSnapshot(\r\n            tasbih => {\r\n              var noOfTasbihs = tasbih.docs.map(data => {\r\n                let _data = data.data();\r\n                return {\r\n                  ID: data.id,\r\n                  Name: _data.Name,\r\n                  Count: _data.count,\r\n                  Status: _data.Status,\r\n                  path: data.ref.path,\r\n                  tID: data.data().TasbihID\r\n                };\r\n              });\r\n\r\n              setNoOfTasbih(noOfTasbihs);\r\n              setLoading(false);\r\n\r\n              if (userDeleted) {\r\n                console.log(\"[TASBIHS] User Removed\");\r\n                unSubs();\r\n              }\r\n            },\r\n            err => {\r\n              unSubs();\r\n            }\r\n          );\r\n      } else {\r\n      }\r\n    } else {\r\n      let unSubs = db\r\n        .collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Tasbihs\")\r\n        .onSnapshot(\r\n          tasbih => {\r\n            var noOfTasbihs = tasbih.docs.map(data => {\r\n              let _data = data.data();\r\n              return {\r\n                ID: data.id,\r\n                Name: _data.Name,\r\n                Count: _data.count,\r\n                Status: _data.Status,\r\n                path: data.ref.path,\r\n                tID: data.data().TasbihID\r\n              };\r\n            });\r\n\r\n            setNoOfTasbih(noOfTasbihs);\r\n            setLoading(false);\r\n\r\n            if (userDeleted) {\r\n              console.log(\"[TASBIHS] User Removed\");\r\n              unSubs();\r\n            }\r\n          },\r\n          err => {\r\n            unSubs();\r\n          }\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"outer-shell\">\r\n      <div className=\"home-body\">\r\n        {noOfTasbih.map(x => {\r\n          return (\r\n            <TasbihCard\r\n              userDeleted={userDeleted}\r\n              key={x.ID}\r\n              name={x.Name}\r\n              count={x.Count}\r\n              status={x.Status}\r\n              path={x.path}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {isLoading ? (\r\n          <div className=\"no-more-tasbihs flex\">Loading Your Tasbihs...</div>\r\n        ) : noOfTasbih.length >= totalTasbihsCount ? (\r\n          <span className=\"flex no-more-tasbihs\">\r\n            No More Tasbihs Available\r\n          </span>\r\n        ) : (\r\n          <TasbihDotedCard click={setModalView} />\r\n        )}\r\n        <ModalShow\r\n          displayedIds={noOfTasbih.map(t => t.tID.replace(\" \", \"\"))}\r\n          showModal={show}\r\n          click={appendNewBlock}\r\n          hideModal={setModalView}\r\n          userDeleted={userDeleted}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","E:\\React App\\tbh-app\\src\\Componets\\Header\\Header.js",[],"E:\\React App\\tbh-app\\src\\Componets\\History\\History.js",["101"],"import React, { useState, useEffect } from 'react'\r\nimport './History.css'\r\nimport db from '../Firebase/firebase';\r\nimport HistoryTemplate from './HistoryBlockTemplate/Template'\r\n\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst History = props => {\r\n    const [tasbihsHistory, setTasbihHistory] = useState([]);\r\n    const userDeleted = props.userDeleted;\r\n\r\n    const currUser = useSelector(state => state.User);\r\n\r\n    const DeletePermenantData = (path) => {\r\n        db.doc(path).update({ deleterPermanently: true }).then((data) => {\r\n            console.log(data);\r\n            console.log(\"Tasbih deleted Permenantly\")\r\n        });\r\n    }\r\n\r\n    const RestoreTasbih = () => {\r\n        console.log(\"Tasbih Restore Successfully\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.pageName('History');\r\n        if (!currUser.isAnonymous) {\r\n            db.collection('Users').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n        else {\r\n            db.collection('GuestUsers').doc(currUser.uid).get().then(userData => {\r\n                let unSubs = userData.ref.collection(\"HistoryTasbihs\").where('deleterPermanently', \"==\", false).orderBy('deletedTime', 'desc').onSnapshot(tasbihData => {\r\n\r\n                    const historyTasbihs = tasbihData.docs.map(doc => {\r\n                        return { id: doc.id, path: doc.ref.path, ...doc.data() };\r\n                    });\r\n\r\n                    setTasbihHistory(historyTasbihs);\r\n\r\n                    if (userDeleted)\r\n                        unSubs();\r\n                }, er => console.log(er));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            tasbihsHistory.map(th => {\r\n                return <HistoryTemplate key={th.id} name={th.tasbihName} path={th.path} counts={th.counts} delete={DeletePermenantData} restore={RestoreTasbih} />\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default History\r\n","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihCard.js",["102"],"import React, { useEffect, useState } from \"react\";\r\nimport db from \"../Firebase/firebase\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { BiReset } from \"react-icons/bi\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst TasbihCard = props => {\r\n  const [counts, setCounts] = useState(props.count);\r\n  const name = props.name;\r\n  const status = props.status;\r\n  const path = props.path;\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const isAnonymous = useSelector(state => state.User.isAnonymous);\r\n  const uid = useSelector(state => state.User.uid);\r\n  const layout = useSelector(state => state.Settings.settings.Layout);\r\n\r\n  const RemoveTasbih = () => {\r\n    if (uid !== \"null\") {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          if (counts > 0) {\r\n            if (!isAnonymous) {\r\n              db\r\n                .collection(\"Users\")\r\n                .doc(uid)\r\n                .get()\r\n                .then(user => {\r\n                  user.ref\r\n                    .collection(\"HistoryTasbihs\")\r\n                    .add(historyDataTemplate(tasbihData.data(), \"delete\"))\r\n                    .then(data => {\r\n                      tasbihData.ref.delete();\r\n                    });\r\n                });\r\n            } else {\r\n              db\r\n                .collection(\"GuestUsers\")\r\n                .doc(uid)\r\n                .get()\r\n                .then(user => {\r\n                  user.ref\r\n                    .collection(\"HistoryTasbihs\")\r\n                    .add(historyDataTemplate(tasbihData.data(), \"delete\"))\r\n                    .then(data => {\r\n                      tasbihData.ref.delete();\r\n                    });\r\n                });\r\n            }\r\n          } else {\r\n            tasbihData.ref.delete();\r\n            console.log(\"Tasbih Has Been Removed\");\r\n          }\r\n          console.log(\"tasbih Has been Removed\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const historyDataTemplate = (data, type) => {\r\n    console.log(data);\r\n    return {\r\n      counts: data.count,\r\n      deletedTime: new Date(),\r\n      deleterPermanently: false,\r\n      operationType: type,\r\n      tasbihId: data.TasbihID,\r\n      tasbihName: data.Name\r\n    };\r\n  };\r\n\r\n  const ResetTasbih = () => {\r\n    console.log(uid);\r\n    if (counts > 0) {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          if (!isAnonymous) {\r\n            db\r\n              .collection(\"Users\")\r\n              .doc(uid)\r\n              .get()\r\n              .then(user => {\r\n                user.ref\r\n                  .collection(\"HistoryTasbihs\")\r\n                  .add(historyDataTemplate(tasbihData.data(), \"reset\"))\r\n                  .then(data => {\r\n                    tasbihData.ref.update({ count: 0 });\r\n                    setCounts(0);\r\n                  });\r\n              });\r\n          } else {\r\n            db\r\n              .collection(\"GuestUsers\")\r\n              .doc(uid)\r\n              .get()\r\n              .then(user => {\r\n                user.ref\r\n                  .collection(\"HistoryTasbihs\")\r\n                  .add(historyDataTemplate(tasbihData.data(), \"reset\"))\r\n                  .then(data => {\r\n                    tasbihData.ref.update({ count: 0 });\r\n                    setCounts(0);\r\n                  });\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const increseCounter = () => {\r\n    var newCount = counts + 1;\r\n    if (path !== \"\") {\r\n      db\r\n        .doc(path)\r\n        .get()\r\n        .then(tasbihData => {\r\n          tasbihData.ref.update({ count: newCount });\r\n        });\r\n    }\r\n    setCounts(newCount);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (path !== \"\") {\r\n        let unSub = db.doc(path).onSnapshot(\r\n          tasbihData => {\r\n            if (tasbihData.data()) setCounts(tasbihData.data().count);\r\n\r\n            if (userDeleted) unSub();\r\n          },\r\n          err => {\r\n            unSub();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    [path]\r\n  );\r\n\r\n  return (\r\n    <div className={layout + \" tasbih-card-shell\"}>\r\n      <div className=\"tasbih-card-inner\">\r\n        <div className=\"header-card\">\r\n          <div className=\"left\">{name}</div>\r\n          <div className=\"right\">\r\n            <span className=\"tasbih-remove\" onClick={RemoveTasbih}>\r\n              <RiDeleteBin5Line />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"middle-card\" onClick={increseCounter}>\r\n          {counts}\r\n        </div>\r\n        <div className=\"footer-card\">\r\n          {status}\r\n          <span className=\"tasbih-reset\" onClick={ResetTasbih}>\r\n            <BiReset />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasbihCard;\r\n","E:\\React App\\tbh-app\\src\\Componets\\Home\\TasbihDotedCard.js",[],"E:\\React App\\tbh-app\\src\\Componets\\ExtraComps\\AddBody.js",["103","104"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport db from \"../Firebase/firebase.js\";\r\n\r\nimport { updateSettings } from \"../../action/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddBody = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [noOfTasbihs, setNoOfTasbih] = useState([]);\r\n  const [tid, setTID] = useState(\"None\");\r\n  const userDeleted = props.userDeleted;\r\n\r\n  const settings = useSelector(s => s.Settings);\r\n  const dispach = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    props.hideModal();\r\n  };\r\n\r\n  const handleAddData = () => {\r\n    if (name !== \"\") {\r\n      props.click(name, tid, noOfTasbihs.length);\r\n      setName(\"\");\r\n    } else {\r\n      alert(\"Select Tasbih First\");\r\n    }\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    e.preventDefault();\r\n\r\n    var val = noOfTasbihs.filter(function(item) {\r\n      return item.Name === e.target.value;\r\n    });\r\n    setName(e.target.value);\r\n    setTID(val[0].ID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unSubs = db\r\n      .collection(\"Tasbihs\")\r\n      .where(\"Visible\", \"==\", true)\r\n      .onSnapshot(\r\n        snap => {\r\n          var noOfTasbihs = snap.docs.map(doc => {\r\n            return { ID: doc.id, Name: doc.data().Name };\r\n          });\r\n\r\n          dispach(\r\n            updateSettings({\r\n              totalTasbihsCount: noOfTasbihs.length\r\n            })\r\n          );\r\n          setNoOfTasbih(noOfTasbihs);\r\n\r\n          if (userDeleted) {\r\n            unSubs();\r\n          }\r\n        },\r\n        er => console.log(er)\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={props.showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Tasbih</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          <div className=\"add-tasbih-name\" key=\"0\">\r\n            <div className=\"tasbih\">\r\n              <select onChange={handleOnChange}>\r\n                <option>Choose Tasbih</option>\r\n                {noOfTasbihs.map(tasbih => {\r\n                  var disable = props.displayedIds.filter(t => {\r\n                    return t === tasbih.ID ? true : false;\r\n                  });\r\n\r\n                  return (\r\n                    <option disabled={disable[0]} key={tasbih.ID}>\r\n                      {tasbih.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" className=\"save-btn\" onClick={handleAddData}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","E:\\React App\\tbh-app\\src\\Componets\\NavigationMenu\\SideNav\\SideNav.js",[],"E:\\React App\\tbh-app\\src\\Componets\\History\\HistoryBlockTemplate\\Template.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":278,"column":6,"nodeType":"115","endLine":278,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":13,"column":10,"nodeType":"111","messageId":"112","endLine":13,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":153,"column":6,"nodeType":"115","endLine":153,"endColumn":8,"suggestions":"119"},{"ruleId":"113","severity":1,"message":"120","line":57,"column":8,"nodeType":"115","endLine":57,"endColumn":10,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"122","line":141,"column":5,"nodeType":"115","endLine":141,"endColumn":11,"suggestions":"123"},{"ruleId":"109","severity":1,"message":"124","line":16,"column":9,"nodeType":"111","messageId":"112","endLine":16,"endColumn":17},{"ruleId":"113","severity":1,"message":"125","line":65,"column":6,"nodeType":"115","endLine":65,"endColumn":8,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'provider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'uid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid', 'isSkipped', 'props.uid', and 'userDeleted'. Either include them or remove the dependency array. If 'setUID' needs the current value of 'props.uid', you can also switch to useReducer instead of useState and read 'props.uid' in the reducer.",["130"],"React Hook useEffect has missing dependencies: 'currUser.isAnonymous', 'currUser.uid', 'props', and 'userDeleted'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["131"],"React Hook useEffect has a missing dependency: 'userDeleted'. Either include it or remove the dependency array.",["132"],"'settings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispach' and 'userDeleted'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [setCurrentUser]",{"range":"144","text":"145"},"Update the dependencies array to be: [currentUser.uid, isSkipped, props.uid, userDeleted]",{"range":"146","text":"147"},"Update the dependencies array to be: [currUser.isAnonymous, currUser.uid, props, userDeleted]",{"range":"148","text":"149"},"Update the dependencies array to be: [path, userDeleted]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispach, userDeleted]",{"range":"152","text":"153"},[9323,9325],"[setCurrentUser]",[4295,4297],"[currentUser.uid, isSkipped, props.uid, userDeleted]",[2144,2146],"[currUser.isAnonymous, currUser.uid, props, userDeleted]",[3991,3997],"[path, userDeleted]",[1703,1705],"[dispach, userDeleted]"]